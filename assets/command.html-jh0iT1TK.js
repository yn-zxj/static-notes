import{_ as a,a as t,b as e}from"./thread_1-hV95VZGV.js";import{_ as r,o as s,c as n,a as i}from"./app-0bRSW3LD.js";const d="/assets/help-K7iRpWi-.png",o="/assets/cat-wp4jqpvr.png",c="/assets/grep-l61LI67H.png",h="/assets/pwd-OuKti7Wb.png",p="/assets/session-OARjViU2.png",g="/assets/version-FZdOgPNE.png",l="/assets/keymap-wbeDY73i.png",f="/assets/jvm-_9XUYt1j.png",b="/assets/sysprop-Teng1CKM.png",u={},m=i('<h2 id="基本命令" tabindex="-1"><a class="header-anchor" href="#基本命令" aria-hidden="true">#</a> 基本命令</h2><h3 id="help" tabindex="-1"><a class="header-anchor" href="#help" aria-hidden="true">#</a> help</h3><p><strong>作用</strong>：查看命令帮助信息</p><figure><img src="'+d+'" alt="help.png" tabindex="0" loading="lazy"><figcaption>help.png</figcaption></figure><h3 id="cat" tabindex="-1"><a class="header-anchor" href="#cat" aria-hidden="true">#</a> cat</h3><p><strong>作用</strong>：打印文件内容，和 linux 中的 cat 命令类似；如果没有写路径，则显示当前目录下的文件</p><figure><img src="'+o+'" alt="cat.png" tabindex="0" loading="lazy"><figcaption>cat.png</figcaption></figure><h3 id="grep" tabindex="-1"><a class="header-anchor" href="#grep" aria-hidden="true">#</a> grep</h3><p><strong>作用</strong>：匹配查找，和 linux 里的 grep 命令类似，但它只能用于管道命令</p><p><strong>语法</strong>：</p><table><thead><tr><th>参数列表</th><th>作用</th></tr></thead><tbody><tr><td><code>-n</code></td><td>显示行号</td></tr><tr><td><code>-i</code></td><td>忽略大小写查找</td></tr><tr><td><code>-m</code> 行数</td><td>最大显示行数，要与查询字符串一起使用</td></tr><tr><td><code>-e</code> &quot;正则表达式&quot;</td><td>使用正则表达式查找</td></tr></tbody></table><blockquote><p>查找包含 java 的行，返回带行号，且返回 10 条</p></blockquote><figure><img src="'+c+'" alt="grep.png" width="650" tabindex="0" loading="lazy"><figcaption>grep.png</figcaption></figure><h3 id="pwd" tabindex="-1"><a class="header-anchor" href="#pwd" aria-hidden="true">#</a> pwd</h3><p><strong>作用</strong>：显示当前工作目录，和 linux 命令类似 (pwd: Print Working Directory)</p><figure><img src="'+h+'" alt="pwd.png" width="650" tabindex="0" loading="lazy"><figcaption>pwd.png</figcaption></figure><h3 id="cls" tabindex="-1"><a class="header-anchor" href="#cls" aria-hidden="true">#</a> cls</h3><p><strong>作用</strong>：清空当前屏幕区域</p><h3 id="session" tabindex="-1"><a class="header-anchor" href="#session" aria-hidden="true">#</a> session</h3><p><strong>作用</strong>：查看当前会话的信息</p><figure><img src="'+p+`" alt="session.png" width="650" tabindex="0" loading="lazy"><figcaption>session.png</figcaption></figure><h3 id="reset" tabindex="-1"><a class="header-anchor" href="#reset" aria-hidden="true">#</a> reset</h3><p><strong>作用</strong>：重置增强类，将被 Arthas 增强过的类全部还原</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 还原指定类</span>
reset Test
<span class="token comment"># 还原所有以List结尾的类</span>
reset *List
<span class="token comment"># 还原所有类</span>
rest
</code></pre></div><h3 id="version" tabindex="-1"><a class="header-anchor" href="#version" aria-hidden="true">#</a> version</h3><p><strong>作用</strong>：输出当前目标 Java 进程所加载的 Arthas 版本号</p><figure><img src="`+g+'" alt="version.png" width="300" tabindex="0" loading="lazy"><figcaption>version.png</figcaption></figure><h3 id="history" tabindex="-1"><a class="header-anchor" href="#history" aria-hidden="true">#</a> history</h3><p><strong>作用</strong>：打印命令历史</p><h3 id="quit" tabindex="-1"><a class="header-anchor" href="#quit" aria-hidden="true">#</a> quit</h3><p><strong>作用</strong>：退出当前 Arthas 客户端，其它 Arthas 客户端不会受到影响</p><h3 id="stop" tabindex="-1"><a class="header-anchor" href="#stop" aria-hidden="true">#</a> stop</h3><p><strong>作用</strong>：关闭 Arthas 服务端，所有 Arthas 客户端全部退出</p><h3 id="keymap" tabindex="-1"><a class="header-anchor" href="#keymap" aria-hidden="true">#</a> keymap</h3><p><strong>作用</strong>：Arthas 快捷键列表及自定义快捷键</p><figure><img src="'+l+'" alt="keymap.png" width="650" tabindex="0" loading="lazy"><figcaption>keymap.png</figcaption></figure><h2 id="jvm-相关" tabindex="-1"><a class="header-anchor" href="#jvm-相关" aria-hidden="true">#</a> jvm 相关</h2><h3 id="dashboard-仪表板" tabindex="-1"><a class="header-anchor" href="#dashboard-仪表板" aria-hidden="true">#</a> dashboard 仪表板</h3><p><strong>作用</strong>：显示当前系统的实时数据面板</p><figure><img src="'+a+'" alt="dashboard.png" width="700" tabindex="0" loading="lazy"><figcaption>dashboard.png</figcaption></figure><blockquote><p>数据说明：<br>  ID：Java 级别的线程 ID<br>  NAME：线程名<br>  GROUP：线程组名<br>  PRIORITY：线程优先级（1~10），数字越大，优先级越高<br>  STATE：线程的状态<br>  CPU%：线程占用的 cpu 使用率，采样 100ms<br>  TIME：线程运行总时间，数据格式为<code>分:秒</code> &gt;  INTERRUPTED：线程当前的中断位状态<br>  DAEMON：是否为 daemon 线程</p></blockquote><h3 id="thread-线程" tabindex="-1"><a class="header-anchor" href="#thread-线程" aria-hidden="true">#</a> thread 线程</h3><p><strong>作用</strong>：查看当前 JVM 中的线程堆栈信息</p><p><strong>参数说明</strong>：</p><table><thead><tr><th>参数名称</th><th>参数说明</th></tr></thead><tbody><tr><td><code>数字</code></td><td>线程 ID</td></tr><tr><td><code>[n:]</code></td><td>指定最忙的前 N 个线程并打印堆栈</td></tr><tr><td><code>[b]</code></td><td>找出当前阻塞其它线程的线程</td></tr><tr><td><code>[i &lt;value&gt;]</code></td><td>指定 cpu 占比统计的采样间隔，单位为毫秒</td></tr><tr><td><code>--all</code></td><td>显示所有匹配的线程</td></tr></tbody></table><figure><img src="'+t+'" alt="线程查看.png" width="700" tabindex="0" loading="lazy"><figcaption>线程查看.png</figcaption></figure><figure><img src="'+e+'" alt="线程ID_1.png" width="700" tabindex="0" loading="lazy"><figcaption>线程ID_1.png</figcaption></figure><h3 id="jvm-虚拟机" tabindex="-1"><a class="header-anchor" href="#jvm-虚拟机" aria-hidden="true">#</a> jvm 虚拟机</h3><p><strong>作用</strong>：查看当前 JVM 的信息</p><figure><img src="'+f+`" alt="jvm部分截图 .png" width="700" tabindex="0" loading="lazy"><figcaption>jvm部分截图 .png</figcaption></figure><p><strong>THREAD 相关</strong>：<br><code>COUNT</code>：JVM 当前活跃的线程数<br><code>DAEMON-COUNT</code>：JVM 当前活跃的守护线程数<br><code>PEAK-COUNT</code>：从 JVM 启动开始曾经活着的最大线程数<br><code>STARTED-COUNT</code>：从 JVM 启动开始总共启动过的线程次数<br><code>DEADLOCK-COUNT</code>：JVM 当前死锁的线程数</p><p><strong>文件描述符相关</strong>:<br><code>MAX-FILE-DESCRIPTOR-COUNT</code>：JVM 进程最大可以打开的文件描述符数<br><code>OPEN-FILE-DESCRIPTOR-COUNT</code>：JVM 当前打开的文件描述符数</p><h3 id="sysprop-系统属性" tabindex="-1"><a class="header-anchor" href="#sysprop-系统属性" aria-hidden="true">#</a> sysprop 系统属性</h3><p><strong>作用</strong>：查看和修改当前 JVM 中的系统属性</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 显示所有系统属性</span>
sysprop

<span class="token comment"># 显示指定系统属性</span>
sysprop user.name
</code></pre></div><figure><img src="`+b+'" alt="系统属性部分截图.png" tabindex="0" loading="lazy"><figcaption>系统属性部分截图.png</figcaption></figure><h2 id="class-classloader-相关" tabindex="-1"><a class="header-anchor" href="#class-classloader-相关" aria-hidden="true">#</a> class/classloader 相关</h2><h2 id="monitor-watch-trace-相关" tabindex="-1"><a class="header-anchor" href="#monitor-watch-trace-相关" aria-hidden="true">#</a> monitor/watch/trace 相关</h2>',58),_=[m];function x(y,v){return s(),n("div",null,_)}const k=r(u,[["render",x],["__file","command.html.vue"]]);export{k as default};
