import{_ as o,j as e,o as c,c as l,f as s,i as n,g as t,w as p,a as k}from"./app-0d603fc9.js";const u={},r=k(`<h2 id="插入数据" tabindex="-1"><a class="header-anchor" href="#插入数据" aria-hidden="true">#</a> 插入数据</h2><h3 id="values-的方式添加" tabindex="-1"><a class="header-anchor" href="#values-的方式添加" aria-hidden="true">#</a> VALUES 的方式添加</h3><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token comment"># 插入单条或多条数据，其中字段列表可省略</span>
<span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> <span class="token keyword">table</span> <span class="token punctuation">[</span><span class="token punctuation">(</span>column1<span class="token punctuation">,</span> column2<span class="token punctuation">,</span> column3<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token keyword">VALUES</span>
<span class="token punctuation">(</span>value1<span class="token punctuation">,</span> value2<span class="token punctuation">,</span> value3<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span>
<span class="token punctuation">[</span><span class="token punctuation">(</span>value1<span class="token punctuation">,</span> value2<span class="token punctuation">,</span> value3<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
<span class="token punctuation">[</span><span class="token punctuation">(</span>value1<span class="token punctuation">,</span> value2<span class="token punctuation">,</span> value3<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
</code></pre></div><div class="hint-container tip"><p class="hint-container-title">提示</p><p>在使用 INSERT 语句时，<mark>可以省略字段名列表，则对应值列表中必须按照实际表中的字段的默认顺序逐个完整的排列</mark>。</p></div><p><strong>示例</strong>：</p><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token comment"># 包含字段列表</span>
<span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> departments <span class="token punctuation">(</span>department_id<span class="token punctuation">,</span> department_name<span class="token punctuation">,</span> manager_id<span class="token punctuation">,</span> location_id<span class="token punctuation">)</span>
<span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token number">280</span><span class="token punctuation">,</span> <span class="token string">&#39;Development&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;103&#39;</span><span class="token punctuation">,</span> <span class="token number">1700</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment"># 省略字段列表</span>
<span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> departments
<span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token number">280</span><span class="token punctuation">,</span> <span class="token string">&#39;Development&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;103&#39;</span><span class="token punctuation">,</span> <span class="token number">1700</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="highlight-lines"><br><div class="highlight-line"> </div><br><br><br><div class="highlight-line"> </div><br></div></div><h3 id="将查询结果插入到表" tabindex="-1"><a class="header-anchor" href="#将查询结果插入到表" aria-hidden="true">#</a> 将查询结果插入到表</h3><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token comment"># 从table2查询数据插入到表table中</span>
<span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> <span class="token keyword">table</span> <span class="token punctuation">[</span><span class="token punctuation">(</span>column1<span class="token punctuation">,</span> column2<span class="token punctuation">,</span> column3<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
<span class="token keyword">SELECT</span> col1<span class="token punctuation">,</span> col2<span class="token punctuation">,</span> col3<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token keyword">FROM</span> table2<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
</code></pre></div><div class="hint-container warning"><p class="hint-container-title">注意</p><p>① 在<code>INSERT</code>语句中加入子查询<br> ② 不必书写<code>VALUES</code>子句<br> ③ 子查询中的值列表应与<code>INSERT</code>子句中的列名对应</p></div><p><strong>示例</strong>：</p><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> sales_reps<span class="token punctuation">(</span>id<span class="token punctuation">,</span> name<span class="token punctuation">,</span> salary<span class="token punctuation">,</span> commission_pct<span class="token punctuation">)</span>
<span class="token keyword">SELECT</span> employee_id<span class="token punctuation">,</span> last_name<span class="token punctuation">,</span> salary<span class="token punctuation">,</span> commission_pct <span class="token keyword">FROM</span> employees<span class="token punctuation">;</span>
</code></pre></div><h2 id="修改数据" tabindex="-1"><a class="header-anchor" href="#修改数据" aria-hidden="true">#</a> 修改数据</h2><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">UPDATE</span> <span class="token keyword">table</span> <span class="token keyword">SET</span> column1 <span class="token operator">=</span> value1<span class="token punctuation">[</span><span class="token punctuation">,</span> column2 <span class="token operator">=</span> value2<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token keyword">WHERE</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">]</span>
</code></pre></div><div class="hint-container tip"><p class="hint-container-title">提示</p><p>① 可以一次更新==多条--数据<br> ② 如果需要回滚数据，需要保证在 DML 前，进行设置<code>SET AUTOCOMMIT = FALSE</code><br> ③ 使用<code>WHERE</code>子句指定需要更新的数据</p></div><p><strong>示例</strong>：</p><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token comment"># 将departments表中部门为280的员工的上级修改为102</span>
<span class="token keyword">UPDATE</span> departments <span class="token keyword">SET</span> manager_id <span class="token operator">=</span> <span class="token string">&#39;102&#39;</span> <span class="token keyword">WHERE</span> department_id <span class="token operator">=</span> <span class="token string">&#39;280&#39;</span><span class="token punctuation">;</span>
</code></pre></div><h2 id="删除数据" tabindex="-1"><a class="header-anchor" href="#删除数据" aria-hidden="true">#</a> 删除数据</h2><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">DELETE</span> <span class="token keyword">FROM</span> <span class="token keyword">table</span> <span class="token punctuation">[</span><span class="token keyword">WHERE</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">]</span>
</code></pre></div><p><strong>示例</strong>：</p><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token comment"># 删除全表数据</span>
<span class="token keyword">DELETE</span> <span class="token keyword">FROM</span> departments<span class="token punctuation">;</span>

<span class="token comment"># 删除部门ID为280的数据</span>
<span class="token keyword">DELETE</span> <span class="token keyword">FROM</span> departments <span class="token keyword">WHERE</span> department_id <span class="token operator">=</span> <span class="token string">&#39;280&#39;</span><span class="token punctuation">;</span>
</code></pre></div><h2 id="mysql8-新特性-计算列" tabindex="-1"><a class="header-anchor" href="#mysql8-新特性-计算列" aria-hidden="true">#</a> MySQL8 新特性-计算列</h2><p>  什么叫计算列呢？简单来说就是某一列的值是通过别的列计算得来的。例如：<code>a</code>列值为<code>1</code>、<code>b</code>列值为<code>2</code>，<code>c</code>列不需要手动插入，定义<code>a+b</code>的结果为<code>c</code>的值，那么<code>c</code>就是计算列，是通过别的列计算得来的。</p><p>  在 MySQL 8.0 中，<code>CREATE TABLE</code>和<code>ALTER TABLE</code>中都支持增加计算列。下面以<code>CREATE TABLE</code>为例进行讲解。</p><blockquote><p>举例：定义数据表 tb1，然后定义字段 id、字段 a、字段 b 和字段 c，其中字段 c 为计算列，用于计算 a+b 的值。 首先创建测试表 tb1，语句如下：</p></blockquote><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> tb1<span class="token punctuation">(</span>
  id <span class="token keyword">INT</span><span class="token punctuation">,</span>
  a <span class="token keyword">INT</span><span class="token punctuation">,</span>
  b <span class="token keyword">INT</span><span class="token punctuation">,</span>
  c <span class="token keyword">INT</span> GENERATED ALWAYS <span class="token keyword">AS</span> <span class="token punctuation">(</span>a <span class="token operator">+</span> b<span class="token punctuation">)</span> VIRTUAL <span class="token comment"># c 即为计算列</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p>插入数据：</p><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> tb1 <span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span> <span class="token keyword">VALUES</span> <span class="token punctuation">(</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">200</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p>查询数据表 tb1 中的数据，结果如下：</p><div class="language-sql" data-ext="sql"><pre class="language-sql"><code>mysql<span class="token operator">&gt;</span> <span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> tb1<span class="token punctuation">;</span>
<span class="token operator">+</span><span class="token comment">------+------+------+------+</span>
<span class="token operator">|</span> id   <span class="token operator">|</span> a    <span class="token operator">|</span> b    <span class="token operator">|</span> c    <span class="token operator">|</span>
<span class="token operator">+</span><span class="token comment">------+------+------+------+</span>
<span class="token operator">|</span> <span class="token boolean">NULL</span> <span class="token operator">|</span> <span class="token number">100</span>  <span class="token operator">|</span> <span class="token number">200</span>  <span class="token operator">|</span> <span class="token number">300</span>  <span class="token operator">|</span>
<span class="token operator">+</span><span class="token comment">------+------+------+------+</span>
<span class="token number">1</span> <span class="token keyword">row</span> <span class="token operator">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span>
</code></pre></div><p>更新数据中的数据，语句如下：</p><div class="language-sql" data-ext="sql"><pre class="language-sql"><code>mysql<span class="token operator">&gt;</span> <span class="token keyword">UPDATE</span> tb1 <span class="token keyword">SET</span> a <span class="token operator">=</span> <span class="token number">500</span> <span class="token punctuation">;</span>
Query OK<span class="token punctuation">,</span> <span class="token number">0</span> <span class="token keyword">rows</span> affected <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span>
<span class="token keyword">Rows</span> <span class="token keyword">matched</span>: <span class="token number">1</span> Changed: <span class="token number">0</span> <span class="token keyword">Warnings</span>: <span class="token number">0</span>
</code></pre></div><h2 id="综合案例" tabindex="-1"><a class="header-anchor" href="#综合案例" aria-hidden="true">#</a> 综合案例</h2><p>(01) 创建数据库 test01_library<br> (02) 创建表 books，表结构如下：</p><table><thead><tr><th>字段名</th><th>字段说明</th><th>数据类型</th></tr></thead><tbody><tr><td>id</td><td>书编号</td><td>INT</td></tr><tr><td>name</td><td>书名</td><td>VARCHAR(50)</td></tr><tr><td>authors</td><td>作者</td><td>VARCHAR(100)</td></tr><tr><td>price</td><td>价格</td><td>FLOAT</td></tr><tr><td>pubdate</td><td>出版日期</td><td>YEAR</td></tr><tr><td>note</td><td>说明</td><td>VARCHAR(100)</td></tr><tr><td>num</td><td>库存</td><td>INT</td></tr></tbody></table><p>(03) 向 books 表中插入记录<br> ① 不指定字段名称，插入第一条记录<br> ② 指定所有字段名称，插入第二记录<br> ③ 同时插入多条记录（剩下的所有记录）</p><table><thead><tr><th>id</th><th>name</th><th>authors</th><th>price</th><th>pubdate</th><th>note</th><th>num</th></tr></thead><tbody><tr><td>1</td><td>Tal of AAA</td><td>Dickes</td><td>23</td><td>1995</td><td>novel</td><td>11</td></tr><tr><td>2</td><td>EmmaT</td><td>Jane lura</td><td>35</td><td>1993</td><td>joke</td><td>22</td></tr><tr><td>3</td><td>Story of Jane</td><td>Jane Tim</td><td>40</td><td>2001</td><td>novel</td><td>0</td></tr><tr><td>4</td><td>Lovey Day</td><td>George Byron</td><td>20</td><td>2005</td><td>novel</td><td>30</td></tr><tr><td>5</td><td>Old land</td><td>Honore Blade</td><td>30</td><td>2010</td><td>law</td><td>0</td></tr><tr><td>6</td><td>The Battle</td><td>Upton Sara</td><td>30</td><td>1999</td><td>medicine</td><td>40</td></tr><tr><td>7</td><td>Rose Hood</td><td>Richard haggard</td><td>28</td><td>2008</td><td>cartoon</td><td>28</td></tr></tbody></table><p>(04) 将小说类型(novel)的书的价格都增加 5<br> (05) 将名称为 EmmaT 的书的价格改为 40 ，并将说明改为 drama<br> (06) 删除库存为 0 的记录<br> (07) 统计书名中包含 a 字母的书<br> (08) 统计书名中包含 a 字母的书的数量和库存总量<br> (09) 找出&quot;novel&quot;类型的书，按照价格降序排列<br> (10) 查询图书信息，按照库存量降序排列，如果库存量相同的按照 note 升序排列<br> (11) 按照 note 分类统计书的数量<br> (12) 按照 note 分类统计书的库存量，显示库存量超过 30 本的<br> (13) 查询所有图书，每页显示 5 本，显示第二页<br> (14) 按照 note 分类统计书的库存量，显示库存量最多的<br> (15) 查询书名达到 10 个字符的书，不包括里面的空格<br> (16) 查询书名和类型，其中 note 值为 novel 显示小说，law 显示法律，medicine 显示医药，cartoon 显示卡通，joke 显示笑话<br> (17) 查询书名、库存，其中 num 值超过 30 本的，显示滞销，大于 0 并低于 10 的，显示畅销，为 0 的显示需要无货<br> (18) 统计每一种 note 的库存量，并合计总量<br> (19) 统计每一种 note 的数量，并合计总量<br> (20) 统计库存量前三名的图书<br> (21) 找出最早出版的一本书<br> (22) 找出 novel 中价格最高的一本书<br> (23) 找出书名中字数最多的一本书，不含空格</p><p><strong>答案</strong>：</p><details class="hint-container details"><summary>点击展开查看</summary><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token comment"># 1</span>
<span class="token keyword">CREATE</span> <span class="token keyword">DATABASE</span> <span class="token keyword">IF</span> <span class="token operator">NOT</span> <span class="token keyword">EXISTS</span> test01_library <span class="token keyword">CHARACTER</span> <span class="token keyword">SET</span> <span class="token string">&#39;utf8&#39;</span><span class="token punctuation">;</span>

<span class="token comment"># 2</span>
<span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token keyword">IF</span> <span class="token operator">NOT</span> <span class="token keyword">EXISTS</span> books<span class="token punctuation">(</span>
  id <span class="token keyword">INT</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;书编码&#39;</span><span class="token punctuation">,</span>
  name <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;书名&#39;</span><span class="token punctuation">,</span>
  author <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;作者&#39;</span><span class="token punctuation">,</span>
  price <span class="token keyword">FLOAT</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;价格&#39;</span><span class="token punctuation">,</span>
  pubdate <span class="token keyword">YEAR</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;出版日期&#39;</span><span class="token punctuation">,</span>
  note <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;说明&#39;</span><span class="token punctuation">,</span>
  num <span class="token keyword">INT</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;库存&#39;</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment"># 3.1</span>
<span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> books <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&#39;Tal of AAA&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Dickes&#39;</span><span class="token punctuation">,</span> <span class="token number">23</span><span class="token punctuation">,</span> <span class="token number">1995</span><span class="token punctuation">,</span> <span class="token string">&#39;novel&#39;</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment"># 3.2</span>
<span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> books<span class="token punctuation">(</span>id<span class="token punctuation">,</span> name<span class="token punctuation">,</span> author<span class="token punctuation">,</span> price<span class="token punctuation">,</span> pubdate<span class="token punctuation">,</span> note<span class="token punctuation">,</span> num<span class="token punctuation">)</span> <span class="token keyword">VALUES</span>
<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">&#39;EmmaT&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Jane lura&#39;</span><span class="token punctuation">,</span> <span class="token number">35</span><span class="token punctuation">,</span> <span class="token number">1993</span><span class="token punctuation">,</span> <span class="token string">&#39;joke&#39;</span><span class="token punctuation">,</span> <span class="token number">22</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment"># 3.3</span>
<span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> books<span class="token punctuation">(</span>id<span class="token punctuation">,</span> name<span class="token punctuation">,</span> author<span class="token punctuation">,</span> price<span class="token punctuation">,</span> pubdate<span class="token punctuation">,</span> note<span class="token punctuation">,</span> num<span class="token punctuation">)</span> <span class="token keyword">VALUES</span>
<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token string">&#39;Story of Jane&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Jane Tim&#39;</span><span class="token punctuation">,</span> <span class="token number">40</span><span class="token punctuation">,</span> <span class="token number">2001</span><span class="token punctuation">,</span> <span class="token string">&#39;novel&#39;</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token string">&#39;Lovey Day&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;George Byron&#39;</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">2005</span><span class="token punctuation">,</span> <span class="token string">&#39;novel&#39;</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token string">&#39;Old land&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Honore Blade&#39;</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">2010</span><span class="token punctuation">,</span> <span class="token string">&#39;law&#39;</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token string">&#39;The Battle&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Upton Sara&#39;</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">1999</span><span class="token punctuation">,</span> <span class="token string">&#39;medicine&#39;</span><span class="token punctuation">,</span> <span class="token number">40</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token string">&#39;Rose Hood&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Richard haggard&#39;</span><span class="token punctuation">,</span> <span class="token number">28</span><span class="token punctuation">,</span> <span class="token number">2008</span><span class="token punctuation">,</span> <span class="token string">&#39;cartoon&#39;</span><span class="token punctuation">,</span> <span class="token number">28</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment"># 4</span>
<span class="token keyword">UPDATE</span> books <span class="token keyword">SET</span> price <span class="token operator">=</span> price <span class="token operator">+</span> <span class="token number">5</span> <span class="token keyword">WHERE</span> note <span class="token operator">=</span> <span class="token string">&#39;novel&#39;</span><span class="token punctuation">;</span>

<span class="token comment"># 5</span>
<span class="token keyword">UPDATE</span> books <span class="token keyword">SET</span> price <span class="token operator">=</span> <span class="token number">40</span><span class="token punctuation">,</span> note <span class="token operator">=</span> <span class="token string">&#39;drama&#39;</span> <span class="token keyword">WHERE</span> name <span class="token operator">=</span> <span class="token string">&#39;EmmaT&#39;</span><span class="token punctuation">;</span>

<span class="token comment"># 6</span>
<span class="token keyword">DELETE</span> <span class="token keyword">FROM</span> books <span class="token keyword">WHERE</span> num <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>

<span class="token comment"># 7</span>
<span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> books <span class="token keyword">WHERE</span> name <span class="token operator">LIKE</span> <span class="token string">&#39;%a%&#39;</span><span class="token punctuation">;</span>

<span class="token comment"># 8</span>
<span class="token keyword">SELECT</span> <span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">SUM</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span> <span class="token keyword">FROM</span> books <span class="token keyword">WHERE</span> name <span class="token operator">LIKE</span> <span class="token string">&#39;%a%&#39;</span><span class="token punctuation">;</span>

<span class="token comment"># 9</span>
<span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> books <span class="token keyword">WHERE</span> note <span class="token operator">=</span> <span class="token string">&#39;novel&#39;</span> <span class="token keyword">ORDER</span> <span class="token keyword">BY</span> price <span class="token keyword">DESC</span><span class="token punctuation">;</span>

<span class="token comment"># 10</span>
<span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> books <span class="token keyword">ORDER</span> <span class="token keyword">BY</span> num <span class="token keyword">DESC</span><span class="token punctuation">,</span> note <span class="token keyword">ASC</span><span class="token punctuation">;</span>

<span class="token comment"># 11</span>
<span class="token keyword">SELECT</span> note<span class="token punctuation">,</span> <span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">FROM</span> books <span class="token keyword">GROUP</span> <span class="token keyword">BY</span> note<span class="token punctuation">;</span>

<span class="token comment"># 12</span>
<span class="token keyword">SELECT</span> note<span class="token punctuation">,</span> <span class="token function">SUM</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span> <span class="token keyword">FROM</span> books <span class="token keyword">GROUP</span> <span class="token keyword">BY</span> note <span class="token keyword">HAVING</span> <span class="token function">SUM</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">30</span><span class="token punctuation">;</span>

<span class="token comment"># 13</span>
<span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> books <span class="token keyword">LIMIT</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">;</span>

<span class="token comment"># 14</span>
<span class="token keyword">SELECT</span> note<span class="token punctuation">,</span> <span class="token function">SUM</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span> <span class="token keyword">FROM</span> books <span class="token keyword">GROUP</span> <span class="token keyword">BY</span> note <span class="token keyword">ORDER</span> <span class="token keyword">BY</span> <span class="token function">SUM</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span> <span class="token keyword">DESC</span> <span class="token keyword">LIMIT</span> <span class="token number">1</span><span class="token punctuation">;</span>

<span class="token comment"># 15</span>
<span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> books <span class="token keyword">WHERE</span> CHAR_LENGTH<span class="token punctuation">(</span><span class="token keyword">REPLACE</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> <span class="token string">&#39; &#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&gt;=</span> <span class="token number">10</span><span class="token punctuation">;</span>

<span class="token comment"># 16</span>
<span class="token keyword">SELECT</span> name <span class="token string">&#39;书名&#39;</span><span class="token punctuation">,</span> <span class="token keyword">CASE</span> note
                    <span class="token keyword">WHEN</span> <span class="token string">&#39;novel&#39;</span> <span class="token keyword">THEN</span> <span class="token string">&#39;小说&#39;</span>
                    <span class="token keyword">WHEN</span> <span class="token string">&#39;law&#39;</span> <span class="token keyword">THEN</span> <span class="token string">&#39;法律&#39;</span>
                    <span class="token keyword">WHEN</span> <span class="token string">&#39;medicine&#39;</span> <span class="token keyword">THEN</span> <span class="token string">&#39;医药&#39;</span>
                    <span class="token keyword">WHEN</span> <span class="token string">&#39;cartoon&#39;</span> <span class="token keyword">THEN</span> <span class="token string">&#39;卡通&#39;</span>
                    <span class="token keyword">WHEN</span> <span class="token string">&#39;joke&#39;</span> <span class="token keyword">THEN</span> <span class="token string">&#39;笑话&#39;</span>
                    <span class="token keyword">END</span> <span class="token string">&#39;类型&#39;</span>
<span class="token keyword">FROM</span> books<span class="token punctuation">;</span>

<span class="token comment"># 17</span>
<span class="token keyword">SELECT</span> name<span class="token punctuation">,</span> <span class="token keyword">CASE</span> <span class="token keyword">WHEN</span> num <span class="token operator">&gt;</span> <span class="token number">30</span> <span class="token keyword">THEN</span> <span class="token string">&#39;滞销&#39;</span>
                  <span class="token keyword">WHEN</span> num <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">AND</span> num <span class="token operator">&lt;</span> <span class="token number">10</span> <span class="token keyword">THEN</span> <span class="token string">&#39;畅销&#39;</span>
                  <span class="token keyword">WHEN</span> num <span class="token operator">=</span> <span class="token number">0</span> <span class="token keyword">THEN</span> <span class="token string">&#39;无货&#39;</span>
             <span class="token keyword">END</span>
<span class="token keyword">FROM</span> books<span class="token punctuation">;</span>

<span class="token comment"># 18</span>
<span class="token keyword">SELECT</span> note<span class="token punctuation">,</span> <span class="token function">SUM</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span> <span class="token keyword">FROM</span> books <span class="token keyword">GROUP</span> <span class="token keyword">BY</span> note <span class="token keyword">WITH ROLLUP</span><span class="token punctuation">;</span>

<span class="token comment"># 19</span>
<span class="token keyword">SELECT</span> note<span class="token punctuation">,</span> <span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">FROM</span> books <span class="token keyword">GROUP</span> <span class="token keyword">BY</span> note <span class="token keyword">WITH ROLLUP</span><span class="token punctuation">;</span>

<span class="token comment"># 20</span>
<span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> books <span class="token keyword">ORDER</span> <span class="token keyword">BY</span> num <span class="token keyword">DESC</span> <span class="token keyword">LIMIT</span> <span class="token number">3</span><span class="token punctuation">;</span>

<span class="token comment"># 21</span>
<span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> books <span class="token keyword">ORDER</span> <span class="token keyword">BY</span> pubdate <span class="token keyword">ASC</span> <span class="token keyword">LIMIT</span> <span class="token number">1</span><span class="token punctuation">;</span>

<span class="token comment"># 22</span>
<span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> books <span class="token keyword">WHERE</span> note <span class="token operator">=</span> <span class="token string">&#39;novel&#39;</span> <span class="token keyword">ORDER</span> <span class="token keyword">BY</span> price <span class="token keyword">DESC</span> <span class="token keyword">LIMIT</span> <span class="token number">1</span><span class="token punctuation">;</span>

<span class="token comment"># 23</span>
<span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> books <span class="token keyword">ORDER</span> <span class="token keyword">BY</span> CHAR_LENGTH<span class="token punctuation">(</span><span class="token keyword">REPLACE</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> <span class="token string">&#39; &#39;</span><span class="token punctuation">,</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">DESC</span> <span class="token keyword">LIMIT</span> <span class="token number">1</span><span class="token punctuation">;</span>
</code></pre></div></details>`,39),d={class:"hint-container tip"},i=s("p",{class:"hint-container-title"},"提示",-1),m=s("code",null,"(当前页数 - 1) * 每页条数, 每页条数",-1),y=s("br",null,null,-1),w=s("code",null,"WITH ROLLUP",-1),E=s("br",null,null,-1),b=s("code",null,"CASE...WHEN...THEN...",-1),g=s("br",null,null,-1);function T(h,R){const a=e("RouterLink");return c(),l("div",null,[r,s("div",d,[i,s("p",null,[n("① 分页显示公式："),m,n("("),t(a,{to:"/backend/database/base/sorting_paging.html#%E5%88%86%E9%A1%B5"},{default:p(()=>[n("知识回顾")]),_:1}),n(")"),y,n(" ② 统计总数"),w,n("("),t(a,{to:"/backend/database/base/aggregate_function.html#group-by-%E4%B8%AD%E4%BD%BF%E7%94%A8-with-rollup"},{default:p(()=>[n("知识回顾")]),_:1}),n(")"),E,n(" ③ "),b,n("的使用("),t(a,{to:"/backend/database/base/one_line_function.html#%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6%E5%87%BD%E6%95%B0"},{default:p(()=>[n("知识回顾")]),_:1}),n(")"),g,n(" ④ 字符串函数("),t(a,{to:"/backend/database/base/one_line_function.html#%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%87%BD%E6%95%B0"},{default:p(()=>[n("知识回顾")]),_:1}),n(")")])])])}const A=o(u,[["render",T],["__file","data_processing.html.vue"]]);export{A as default};
