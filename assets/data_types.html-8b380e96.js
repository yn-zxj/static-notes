import{_ as t,j as h,o as s,c as i,f as e,i as a,g as d,a as n}from"./app-2b6fe2ee.js";const o={},c={href:"https://redis.io/docs/data-types/",target:"_blank",rel:"noopener noreferrer"},l=n('<h2 id="字符串-string" tabindex="-1"><a class="header-anchor" href="#字符串-string" aria-hidden="true">#</a> 字符串(String)</h2><p>  string 是 redis 最基本的数据类型，一个 key 对应一个 value。它是二进制安全的，意思是 redis 的 string 可以包含任何数据，比如 jpg 图片或者序列化对象等；一个 redis 中字符串 value 最多可以是 512M。</p><h2 id="列表-list" tabindex="-1"><a class="header-anchor" href="#列表-list" aria-hidden="true">#</a> 列表(List)</h2><p>  列表是简单的字符串列表，按照插入顺序排列。你可以添加一个元素到列表的头部(左边)或者尾部(右边)。它的底层实际是个双端链表，最多可以包含 2<sup>32</sup>-1 个元素(4294967295，每个列表超过 40 亿个元素)。</p><h2 id="哈希表-hash" tabindex="-1"><a class="header-anchor" href="#哈希表-hash" aria-hidden="true">#</a> 哈希表(Hash)</h2><p>  redis hash 是一个 string 类型的 field(字段)和 value(值)的映射表，hash 特别适合用于存储对象。redis 中每个 hash 可以存储 2<sup>32</sup>-1 键值对(40 多亿)。</p><h2 id="集合-set" tabindex="-1"><a class="header-anchor" href="#集合-set" aria-hidden="true">#</a> 集合(Set)</h2><h2 id="有序集合-zset" tabindex="-1"><a class="header-anchor" href="#有序集合-zset" aria-hidden="true">#</a> 有序集合(ZSet)</h2><h2 id="地理空间-geo" tabindex="-1"><a class="header-anchor" href="#地理空间-geo" aria-hidden="true">#</a> 地理空间(GEO)</h2><h2 id="基数统计-hyperloglog" tabindex="-1"><a class="header-anchor" href="#基数统计-hyperloglog" aria-hidden="true">#</a> 基数统计(HyperLogLog)</h2><h2 id="位图-bitmap" tabindex="-1"><a class="header-anchor" href="#位图-bitmap" aria-hidden="true">#</a> 位图(bitmap)</h2><h2 id="位域-bitfield" tabindex="-1"><a class="header-anchor" href="#位域-bitfield" aria-hidden="true">#</a> 位域(bitfield)</h2><h2 id="流-stream" tabindex="-1"><a class="header-anchor" href="#流-stream" aria-hidden="true">#</a> 流(Stream)</h2>',13);function p(f,u){const r=h("ExternalLinkIcon");return s(),i("div",null,[e("p",null,[a("  数据类型参考："),e("a",c,[a("https://redis.io/docs/data-types/"),d(r)])]),l])}const b=t(o,[["render",p],["__file","data_types.html.vue"]]);export{b as default};
