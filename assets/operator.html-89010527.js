import{_ as s,o as n,c as a,a as p}from"./app-350e9bd7.js";const t="/assets/calc_demo-482aa5e6.png",o="/assets/operator_precedence-bc3f6797.png",e="/assets/reg_list-c55fa69f.png",c={},r=p(`<h2 id="算数运算符" tabindex="-1"><a class="header-anchor" href="#算数运算符" aria-hidden="true">#</a> 算数运算符</h2><table><thead><tr><th style="text-align:center;">运算符</th><th>名称</th><th>作用</th><th>示例</th></tr></thead><tbody><tr><td style="text-align:center;"><code>+</code></td><td>加法运算符</td><td>计算两个值或表达式的和</td><td><code>SELECT a + b;</code></td></tr><tr><td style="text-align:center;"><code>-</code></td><td>减法运算符</td><td>计算两个值或表达式的差</td><td><code>SELECT a - b;</code></td></tr><tr><td style="text-align:center;"><code>*</code></td><td>乘法运算符</td><td>计算两个值或表达式的乘积</td><td><code>SELECT a * b;</code></td></tr><tr><td style="text-align:center;"><code>/</code>或<code>DIV</code></td><td>除法运算符</td><td>计算两个值或表达式的商</td><td><code>SELECT a / b;</code><br><code>SELECT a DIV b;</code></td></tr><tr><td style="text-align:center;"><code>%</code>或<code>MOD</code></td><td>求模(求余)运算符</td><td>计算两个值或表达式的余数</td><td><code>SELECT a % b;</code><br><code>SELECT a MOD b;</code></td></tr></tbody></table><h3 id="加法与减法运算符" tabindex="-1"><a class="header-anchor" href="#加法与减法运算符" aria-hidden="true">#</a> 加法与减法运算符</h3><div class="language-sql" data-ext="sql"><pre class="language-sql"><code>mysql<span class="token operator">&gt;</span> <span class="token keyword">SELECT</span> <span class="token number">100</span> <span class="token punctuation">,</span> <span class="token number">100</span> <span class="token operator">+</span> <span class="token number">0</span> <span class="token punctuation">,</span> <span class="token number">100</span> <span class="token operator">-</span> <span class="token number">0</span> <span class="token punctuation">,</span> <span class="token number">100</span> <span class="token operator">+</span> <span class="token number">50</span> <span class="token punctuation">,</span> <span class="token number">100</span> <span class="token operator">+</span> <span class="token number">50</span> <span class="token operator">-</span> <span class="token number">30</span> <span class="token punctuation">,</span> <span class="token number">100</span> <span class="token operator">+</span> <span class="token number">35.5</span><span class="token punctuation">,</span> <span class="token number">100</span> <span class="token operator">-</span> <span class="token number">35</span> <span class="token keyword">FROM</span> dual<span class="token punctuation">;</span>
<span class="token operator">+</span><span class="token comment">-----+---------+---------+----------+---------------+------------+----------+</span>
<span class="token operator">|</span> <span class="token number">100</span> <span class="token operator">|</span> <span class="token number">100</span> <span class="token operator">+</span> <span class="token number">0</span> <span class="token operator">|</span> <span class="token number">100</span> <span class="token operator">-</span> <span class="token number">0</span> <span class="token operator">|</span> <span class="token number">100</span> <span class="token operator">+</span> <span class="token number">50</span> <span class="token operator">|</span> <span class="token number">100</span> <span class="token operator">+</span> <span class="token number">50</span> <span class="token operator">-</span> <span class="token number">30</span> <span class="token operator">|</span> <span class="token number">100</span> <span class="token operator">+</span> <span class="token number">35.5</span> <span class="token operator">|</span> <span class="token number">100</span> <span class="token operator">-</span> <span class="token number">35</span> <span class="token operator">|</span>
<span class="token operator">+</span><span class="token comment">-----+---------+---------+----------+---------------+------------+----------+</span>
<span class="token operator">|</span> <span class="token number">100</span> <span class="token operator">|</span>     <span class="token number">100</span> <span class="token operator">|</span>     <span class="token number">100</span> <span class="token operator">|</span>      <span class="token number">150</span> <span class="token operator">|</span>           <span class="token number">120</span> <span class="token operator">|</span> <span class="token number">135.5</span>      <span class="token operator">|</span>       <span class="token number">65</span> <span class="token operator">|</span>
<span class="token operator">+</span><span class="token comment">-----+---------+---------+----------+---------------+------------+----------+</span>
<span class="token number">1</span> <span class="token keyword">row</span> <span class="token operator">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span><span class="token number">0.04</span> sec<span class="token punctuation">)</span>
</code></pre></div><p><strong>由运算结果可以得出如下结论</strong>：</p><blockquote><p>① 一个整数类型的值对整数进行加法和减法操作，结果还是一个整数；<br> ② 一个整数类型的值对浮点数进行加法和减法操作，结果是一个浮点数；<br> ③ 加法和减法的优先级相同，进行先加后减操作与进行先减后加操作的结果是一样的；<br> ④ 在 Java 中，+的左右两边如果有字符串，那么表示字符串的拼接。但是在 MySQL 中+只表示数值相加。如果遇到非数值类型，先尝试转成数值，如果转失败，就按 0 计算。（补充：MySQL 中字符串拼接要使用字符串函数<code>CONCAT()</code>实现）</p></blockquote><h3 id="乘法与除法运算符" tabindex="-1"><a class="header-anchor" href="#乘法与除法运算符" aria-hidden="true">#</a> 乘法与除法运算符</h3><div class="language-sql" data-ext="sql"><pre class="language-sql"><code>mysql<span class="token operator">&gt;</span> <span class="token keyword">SELECT</span> <span class="token number">100</span> <span class="token punctuation">,</span> <span class="token number">100</span> <span class="token operator">*</span> <span class="token number">1</span> <span class="token punctuation">,</span> <span class="token number">100</span> <span class="token operator">*</span> <span class="token number">1.0</span><span class="token punctuation">,</span> <span class="token number">100</span> <span class="token operator">/</span> <span class="token number">1.0</span><span class="token punctuation">,</span> <span class="token number">100</span> <span class="token operator">/</span> <span class="token number">2</span> <span class="token punctuation">,</span> <span class="token number">100</span> <span class="token operator">+</span> <span class="token number">2</span> <span class="token operator">*</span> <span class="token number">5</span> <span class="token operator">/</span> <span class="token number">2</span> <span class="token punctuation">,</span> <span class="token number">100</span> <span class="token operator">/</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">100</span> <span class="token operator">DIV</span> <span class="token number">0</span> <span class="token keyword">FROM</span> dual<span class="token punctuation">;</span>
<span class="token operator">+</span><span class="token comment">-----+---------+-----------+-----------+---------+-----------------+---------+-----------+</span>
<span class="token operator">|</span> <span class="token number">100</span> <span class="token operator">|</span> <span class="token number">100</span> <span class="token operator">*</span> <span class="token number">1</span> <span class="token operator">|</span> <span class="token number">100</span> <span class="token operator">*</span> <span class="token number">1.0</span> <span class="token operator">|</span> <span class="token number">100</span> <span class="token operator">/</span> <span class="token number">1.0</span> <span class="token operator">|</span> <span class="token number">100</span> <span class="token operator">/</span> <span class="token number">2</span> <span class="token operator">|</span> <span class="token number">100</span> <span class="token operator">+</span> <span class="token number">2</span> <span class="token operator">*</span> <span class="token number">5</span> <span class="token operator">/</span> <span class="token number">2</span> <span class="token operator">|</span> <span class="token number">100</span> <span class="token operator">/</span><span class="token number">3</span>  <span class="token operator">|</span> <span class="token number">100</span> <span class="token operator">DIV</span> <span class="token number">0</span> <span class="token operator">|</span>
<span class="token operator">+</span><span class="token comment">-----+---------+-----------+-----------+---------+-----------------+---------+-----------+</span>
<span class="token operator">|</span> <span class="token number">100</span> <span class="token operator">|</span>     <span class="token number">100</span> <span class="token operator">|</span> <span class="token number">100.0</span>     <span class="token operator">|</span> <span class="token number">100.0000</span>  <span class="token operator">|</span> <span class="token number">50.0000</span> <span class="token operator">|</span> <span class="token number">105.0000</span>        <span class="token operator">|</span> <span class="token number">33.3333</span> <span class="token operator">|</span> <span class="token boolean">NULL</span>      <span class="token operator">|</span>
<span class="token operator">+</span><span class="token comment">-----+---------+-----------+-----------+---------+-----------------+---------+-----------+</span>
<span class="token number">1</span> <span class="token keyword">row</span> <span class="token operator">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span><span class="token number">0.04</span> sec<span class="token punctuation">)</span>
</code></pre></div><p><strong>由运算结果可以得出如下结论</strong>：</p><blockquote><p>① 一个数乘以整数 1 和除以整数 1 后仍得原数；<br> ② 一个数乘以浮点数 1 和除以浮点数 1 后变成浮点数，数值与原数相等；<br> ③ 一个数除以整数后，不管是否能除尽，结果都为一个浮点数；<br> ④ 一个数除以另一个数，除不尽时，结果为一个浮点数，并保留到小数点后 4 位；<br> ⑤ 乘法和除法的优先级相同，进行先乘后除操作与先除后乘操作，得出的结果相同；<br> ⑥ 在数学运算中， 0 不能用作除数，在 MySQL 中，一个数除以 0 为 NULL。</p></blockquote><h3 id="求模-求余-运算符" tabindex="-1"><a class="header-anchor" href="#求模-求余-运算符" aria-hidden="true">#</a> 求模(求余)运算符</h3><div class="language-sql" data-ext="sql"><pre class="language-sql"><code>mysql<span class="token operator">&gt;</span> <span class="token keyword">SELECT</span> <span class="token number">12</span> <span class="token operator">%</span> <span class="token number">3</span> <span class="token punctuation">,</span> <span class="token number">12</span> MOD <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">12</span> <span class="token operator">%</span> <span class="token operator">-</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">12</span> <span class="token operator">%</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">12</span> <span class="token operator">%</span> <span class="token operator">-</span><span class="token number">5</span> <span class="token keyword">FROM</span> dual<span class="token punctuation">;</span>
<span class="token operator">+</span><span class="token comment">--------+----------+---------+---------+----------+</span>
<span class="token operator">|</span> <span class="token number">12</span> <span class="token operator">%</span> <span class="token number">3</span> <span class="token operator">|</span> <span class="token number">12</span> MOD <span class="token number">5</span> <span class="token operator">|</span> <span class="token number">12</span> <span class="token operator">%</span> <span class="token operator">-</span><span class="token number">5</span> <span class="token operator">|</span> <span class="token operator">-</span><span class="token number">12</span> <span class="token operator">%</span> <span class="token number">5</span> <span class="token operator">|</span> <span class="token operator">-</span><span class="token number">12</span> <span class="token operator">%</span> <span class="token operator">-</span><span class="token number">5</span> <span class="token operator">|</span>
<span class="token operator">+</span><span class="token comment">--------+----------+---------+---------+----------+</span>
<span class="token operator">|</span>      <span class="token number">0</span> <span class="token operator">|</span>        <span class="token number">2</span> <span class="token operator">|</span>       <span class="token number">2</span> <span class="token operator">|</span>      <span class="token operator">-</span><span class="token number">2</span> <span class="token operator">|</span>       <span class="token operator">-</span><span class="token number">2</span> <span class="token operator">|</span>
<span class="token operator">+</span><span class="token comment">--------+----------+---------+---------+----------+</span>
<span class="token number">1</span> <span class="token keyword">row</span> <span class="token operator">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span><span class="token number">0.04</span> sec<span class="token punctuation">)</span>
</code></pre></div><h2 id="比较运算符" tabindex="-1"><a class="header-anchor" href="#比较运算符" aria-hidden="true">#</a> 比较运算符</h2><p>  比较运算符用来对表达式左边的操作数和右边的操作数进行比较，比较的结果为真则返回 1 ，比较的结果为假则返回 0 ，其他情况则返回 NULL。</p><table><thead><tr><th style="text-align:center;">运算符</th><th>名称</th><th>作用</th></tr></thead><tbody><tr><td style="text-align:center;"><code>=</code></td><td>等于运算符</td><td>判断两个值、字符串或表达式是否相等</td></tr><tr><td style="text-align:center;"><code>&lt;=&gt;</code></td><td>安全等于运算符</td><td>安全的判断两个值、字符串或表达式是否相等</td></tr><tr><td style="text-align:center;"><code>&lt;&gt;</code>或<code>!=</code></td><td>不等于运算符</td><td>判断两个值、字符串或表达式是否不相等</td></tr><tr><td style="text-align:center;"><code>&lt;</code></td><td>小于运算符</td><td>判断前面的是否小于后面的值、字符串或表达式</td></tr><tr><td style="text-align:center;"><code>&lt;=</code></td><td>小于等于运算符</td><td>判断前面的是否小于或等于后面的值、字符串或表达式</td></tr><tr><td style="text-align:center;"><code>&gt;</code></td><td>大于运算符</td><td>判断前面的是否大于后面的值、字符串或表达式</td></tr><tr><td style="text-align:center;"><code>&gt;=</code></td><td>大于等于运算符</td><td>判断前面的是否大于或等于后面的值、字符串或表达式</td></tr></tbody></table><h3 id="等号运算符" tabindex="-1"><a class="header-anchor" href="#等号运算符" aria-hidden="true">#</a> 等号运算符</h3><p>（1）等号运算符(<code>=</code>)判断等号两边的值、字符串或表达式是否相等，如果相等则返回 1 ，不相等则返回 0；</p><p>（2）在使用等号运算符时，遵循如下规则：</p><ul><li>如果等号两边的值、字符串或表达式都为字符串，则 MySQL 会按照字符串进行比较，其比较的是每个字符串中字符的 ANSI 编码是否相等；</li><li>如果等号两边的值都是整数，则 MySQL 会按照整数来比较两个值的大小；</li><li>如果等号两边的值一个是整数，另一个是字符串，则 MySQL 会将字符串转化为数字进行比较；</li><li>如果等号两边的值、字符串或表达式中有一个为 NULL，则比较结果为 NULL。</li></ul><div class="language-sql" data-ext="sql"><pre class="language-sql"><code>mysql<span class="token operator">&gt;</span> <span class="token keyword">SELECT</span> <span class="token string">&#39;a&#39;</span> <span class="token operator">=</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">,</span> <span class="token number">1</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span> <span class="token operator">=</span> <span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;&#39;</span> <span class="token operator">=</span> <span class="token boolean">null</span><span class="token punctuation">,</span> <span class="token boolean">null</span> <span class="token operator">=</span> <span class="token boolean">null</span> <span class="token keyword">FROM</span> dual<span class="token punctuation">;</span>
<span class="token operator">+</span><span class="token comment">-----------+-------+---------+-----------+-------------+</span>
<span class="token operator">|</span> <span class="token string">&#39;a&#39;</span> <span class="token operator">=</span> <span class="token string">&#39;b&#39;</span> <span class="token operator">|</span> <span class="token number">1</span> <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">|</span> <span class="token number">1</span> <span class="token operator">=</span> <span class="token string">&#39;a&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;&#39;</span> <span class="token operator">=</span> <span class="token boolean">null</span> <span class="token operator">|</span> <span class="token boolean">null</span> <span class="token operator">=</span> <span class="token boolean">null</span> <span class="token operator">|</span>
<span class="token operator">+</span><span class="token comment">-----------+-------+---------+-----------+-------------+</span>
<span class="token operator">|</span>         <span class="token number">0</span> <span class="token operator">|</span>     <span class="token number">1</span> <span class="token operator">|</span>       <span class="token number">0</span> <span class="token operator">|</span> <span class="token boolean">NULL</span>      <span class="token operator">|</span> <span class="token boolean">NULL</span>        <span class="token operator">|</span>
<span class="token operator">+</span><span class="token comment">-----------+-------+---------+-----------+-------------+</span>
<span class="token number">1</span> <span class="token keyword">row</span> <span class="token operator">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span><span class="token number">0.04</span> sec<span class="token punctuation">)</span>
</code></pre></div><h3 id="安全等于运算符" tabindex="-1"><a class="header-anchor" href="#安全等于运算符" aria-hidden="true">#</a> 安全等于运算符</h3><p>  安全等于运算符(<code>&lt;=&gt;</code>)与等于运算符(<code>=</code>)的作用是相似的，<code>==</code>唯一的区别是<code>&lt;=&gt;</code>可以用来对 NULL 进行判断。在两个操作数均为 NULL 时，其返回值为 1，而不为 NULL；当一个操作数为 NULL 时，其返回值为 0，而不为 NULL。</p><div class="language-sql" data-ext="sql"><pre class="language-sql"><code>mysql<span class="token operator">&gt;</span> <span class="token keyword">SELECT</span> <span class="token number">1</span> <span class="token operator">&lt;=&gt;</span> <span class="token string">&#39;1&#39;</span><span class="token punctuation">,</span> <span class="token number">1</span> <span class="token operator">&lt;=&gt;</span> <span class="token number">0</span> <span class="token punctuation">,</span> <span class="token string">&#39;a&#39;</span> <span class="token operator">&lt;=&gt;</span> <span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;&#39;</span> <span class="token operator">&lt;=&gt;</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span><span class="token boolean">NULL</span> <span class="token operator">&lt;=&gt;</span> <span class="token boolean">NULL</span> <span class="token keyword">FROM</span> dual<span class="token punctuation">;</span>
<span class="token operator">+</span><span class="token comment">-----------+---------+-------------+-------------+---------------+</span>
<span class="token operator">|</span> <span class="token number">1</span> <span class="token operator">&lt;=&gt;</span> <span class="token string">&#39;1&#39;</span> <span class="token operator">|</span> <span class="token number">1</span> <span class="token operator">&lt;=&gt;</span> <span class="token number">0</span> <span class="token operator">|</span> <span class="token string">&#39;a&#39;</span> <span class="token operator">&lt;=&gt;</span> <span class="token string">&#39;a&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;&#39;</span> <span class="token operator">&lt;=&gt;</span> <span class="token boolean">NULL</span> <span class="token operator">|</span> <span class="token boolean">NULL</span> <span class="token operator">&lt;=&gt;</span> <span class="token boolean">NULL</span> <span class="token operator">|</span>
<span class="token operator">+</span><span class="token comment">-----------+---------+-------------+-------------+---------------+</span>
<span class="token operator">|</span>         <span class="token number">1</span> <span class="token operator">|</span>       <span class="token number">0</span> <span class="token operator">|</span>           <span class="token number">1</span> <span class="token operator">|</span>           <span class="token number">0</span> <span class="token operator">|</span>             <span class="token number">1</span> <span class="token operator">|</span>
<span class="token operator">+</span><span class="token comment">-----------+---------+-------------+-------------+---------------+</span>
<span class="token number">1</span> <span class="token keyword">row</span> <span class="token operator">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span><span class="token number">0.04</span> sec<span class="token punctuation">)</span>
</code></pre></div><h3 id="不等于运算符" tabindex="-1"><a class="header-anchor" href="#不等于运算符" aria-hidden="true">#</a> 不等于运算符</h3><p>  不等于运算符(<code>&lt;&gt;</code>或<code>!=</code>)用于判断两边的数字、字符串或者表达式的值是否不相等，如果不相等则返回 1，相等则返回 0。不等于运算符不能判断 NULL 值，如果两边的值有任意一个为 NULL，或两边都为 NULL，则结果为 NULL。</p><div class="language-sql" data-ext="sql"><pre class="language-sql"><code>mysql<span class="token operator">&gt;</span> <span class="token keyword">SELECT</span> <span class="token number">1</span> <span class="token operator">&lt;&gt;</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">1</span> <span class="token operator">!=</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">&#39;1&#39;</span> <span class="token operator">&lt;&gt;</span> <span class="token string">&#39;1&#39;</span><span class="token punctuation">,</span> <span class="token boolean">null</span> <span class="token operator">!=</span> <span class="token boolean">null</span><span class="token punctuation">,</span> <span class="token boolean">null</span> <span class="token operator">!=</span> <span class="token number">1</span> <span class="token keyword">FROM</span> dual<span class="token punctuation">;</span>
<span class="token operator">+</span><span class="token comment">--------+--------+------------+--------------+-----------+</span>
<span class="token operator">|</span> <span class="token number">1</span> <span class="token operator">&lt;&gt;</span> <span class="token number">2</span> <span class="token operator">|</span> <span class="token number">1</span> <span class="token operator">!=</span> <span class="token number">2</span> <span class="token operator">|</span> <span class="token string">&#39;1&#39;</span> <span class="token operator">&lt;&gt;</span> <span class="token string">&#39;1&#39;</span> <span class="token operator">|</span> <span class="token boolean">null</span> <span class="token operator">!=</span> <span class="token boolean">null</span> <span class="token operator">|</span> <span class="token boolean">null</span> <span class="token operator">!=</span> <span class="token number">1</span> <span class="token operator">|</span>
<span class="token operator">+</span><span class="token comment">--------+--------+------------+--------------+-----------+</span>
<span class="token operator">|</span>      <span class="token number">1</span> <span class="token operator">|</span>      <span class="token number">1</span> <span class="token operator">|</span>          <span class="token number">0</span> <span class="token operator">|</span> <span class="token boolean">NULL</span>         <span class="token operator">|</span> <span class="token boolean">NULL</span>      <span class="token operator">|</span>
<span class="token operator">+</span><span class="token comment">--------+--------+------------+--------------+-----------+</span>
<span class="token number">1</span> <span class="token keyword">row</span> <span class="token operator">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span><span class="token number">0.04</span> sec<span class="token punctuation">)</span>
</code></pre></div><h2 id="非符号运算符" tabindex="-1"><a class="header-anchor" href="#非符号运算符" aria-hidden="true">#</a> 非符号运算符</h2><table><thead><tr><th style="text-align:center;">运算符</th><th>名称</th><th>作用</th></tr></thead><tbody><tr><td style="text-align:center;"><code>IS NULL</code></td><td>为空运算</td><td>判断值是否为空</td></tr><tr><td style="text-align:center;"><code>IS NOT NULL</code></td><td>不为空运算</td><td>判断值是否不为空</td></tr><tr><td style="text-align:center;"><code>LEAST</code></td><td>最小值运算符</td><td>在多值中返回最小值</td></tr><tr><td style="text-align:center;"><code>GREATEST</code></td><td>最大值运算符</td><td>在多值中返回最大值</td></tr><tr><td style="text-align:center;"><code>BETWEEN AND</code></td><td>两值之间的运算符</td><td>判断一个值是否存在两值之间</td></tr><tr><td style="text-align:center;"><code>ISNULL</code></td><td>为空运算符</td><td>判断值是否为空</td></tr><tr><td style="text-align:center;"><code>IN</code></td><td>属于运算符</td><td>判断列表是否包含值</td></tr><tr><td style="text-align:center;"><code>NOT IN</code></td><td>不属于运算符</td><td>判断列表是否不包含值</td></tr><tr><td style="text-align:center;"><code>LIKE</code></td><td>模糊匹配运算符</td><td>判断值是否模糊匹配规则</td></tr><tr><td style="text-align:center;"><code>REGEXP</code></td><td>正则表达式运算符</td><td>判断值是否符合正则表达式规则</td></tr><tr><td style="text-align:center;"><code>RLIKE</code></td><td>正则表达式运算符</td><td>判断值是否符合正则表达式规则</td></tr></tbody></table><h3 id="空-非空运算符" tabindex="-1"><a class="header-anchor" href="#空-非空运算符" aria-hidden="true">#</a> 空 / 非空运算符</h3><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> title_info <span class="token keyword">WHERE</span> remark <span class="token operator">IS</span> <span class="token boolean">NULL</span><span class="token punctuation">;</span>
<span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> title_info <span class="token keyword">WHERE</span> ISNULL<span class="token punctuation">(</span>remark<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> title_info <span class="token keyword">WHERE</span> remark <span class="token operator">IS</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">;</span>
</code></pre></div><h3 id="最小-最大值运算符" tabindex="-1"><a class="header-anchor" href="#最小-最大值运算符" aria-hidden="true">#</a> 最小 / 最大值运算符</h3><p><code>GREATEST</code>和<code>LEAST</code>函数都使用<code>N</code>个参数，并分别返回最大和最小值。<br> 语法：</p><div class="language-sql" data-ext="sql"><pre class="language-sql"><code>GREATEST<span class="token punctuation">(</span>value1<span class="token punctuation">,</span> value2<span class="token punctuation">,</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
LEAST<span class="token punctuation">(</span>value1<span class="token punctuation">,</span>value2<span class="token punctuation">,</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p><strong>以下比较规则适用于这两个函数</strong>：</p><blockquote><p>① 如果任何参数为 NULL，则两个函数都将立即返回 NULL，而不进行任何比较<br> ② 如果在 INT 或 REAL 上下文中使用函数，或者所有参数都是整数值或 REAL 值，那么它们将分别作为 INT 和 REAL 来比较<br> ③ 如果参数由数字和字符串组成，则函数将它们作为数字进行比较<br> ④ 如果至少一个参数是非二进制(字符)字符串，则函数将将参数作为非二进制字符串进行比较<br> ⑤ 在所有其他情况下，函数将参数作为二进制字符串进行比较</p></blockquote><div class="language-sql" data-ext="sql"><pre class="language-sql"><code>mysql<span class="token operator">&gt;</span> <span class="token keyword">SELECT</span> LEAST<span class="token punctuation">(</span><span class="token string">&#39;d&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;e&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;g&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;m&#39;</span><span class="token punctuation">)</span> <span class="token keyword">AS</span> <span class="token string">&#39;LEAST&#39;</span><span class="token punctuation">,</span> GREATEST<span class="token punctuation">(</span><span class="token string">&#39;d&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;e&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;g&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;m&#39;</span><span class="token punctuation">)</span> <span class="token keyword">AS</span> <span class="token string">&#39;GREATEST&#39;</span> <span class="token keyword">FROM</span> dual<span class="token punctuation">;</span>
<span class="token operator">+</span><span class="token comment">-------+----------+</span>
<span class="token operator">|</span> LEAST <span class="token operator">|</span> GREATEST <span class="token operator">|</span>
<span class="token operator">+</span><span class="token comment">-------+----------+</span>
<span class="token operator">|</span> d     <span class="token operator">|</span> m        <span class="token operator">|</span>
<span class="token operator">+</span><span class="token comment">-------+----------+</span>
<span class="token number">1</span> <span class="token keyword">row</span> <span class="token operator">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span><span class="token number">0.04</span> sec<span class="token punctuation">)</span>
</code></pre></div><h3 id="between-and-运算符" tabindex="-1"><a class="header-anchor" href="#between-and-运算符" aria-hidden="true">#</a> BETWEEN AND 运算符</h3><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token comment"># BETWEEN 条件一 AND 条件二 (查询条件一和条件二范围内的数据，包含边界)</span>
<span class="token keyword">SELECT</span> employee_id<span class="token punctuation">,</span> salary <span class="token keyword">FROM</span> employees <span class="token keyword">WHERE</span> salary <span class="token operator">BETWEEN</span> <span class="token number">2000</span> <span class="token operator">AND</span> <span class="token number">5000</span><span class="token punctuation">;</span>
</code></pre></div><h3 id="in-not-in-运算符" tabindex="-1"><a class="header-anchor" href="#in-not-in-运算符" aria-hidden="true">#</a> IN / NOT IN 运算符</h3><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token comment"># IN 运算符</span>
mysql<span class="token operator">&gt;</span> <span class="token keyword">SELECT</span> <span class="token string">&#39;a&#39;</span> <span class="token operator">IN</span> <span class="token punctuation">(</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;b&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;c&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">1</span> <span class="token operator">IN</span> <span class="token punctuation">(</span> <span class="token number">2</span> <span class="token punctuation">,</span> <span class="token number">3</span> <span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token boolean">NULL</span> <span class="token operator">IN</span> <span class="token punctuation">(</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;b&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&#39;a&#39;</span> <span class="token operator">IN</span> <span class="token punctuation">(</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token boolean">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token operator">+</span><span class="token comment">----------------------+----------------+-------------------+--------------------+</span>
<span class="token operator">|</span> <span class="token string">&#39;a&#39;</span> <span class="token operator">IN</span> <span class="token punctuation">(</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;b&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;c&#39;</span><span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token number">1</span> <span class="token operator">IN</span> <span class="token punctuation">(</span> <span class="token number">2</span> <span class="token punctuation">,</span> <span class="token number">3</span> <span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token boolean">NULL</span> <span class="token operator">IN</span> <span class="token punctuation">(</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;b&#39;</span><span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token string">&#39;a&#39;</span> <span class="token operator">IN</span> <span class="token punctuation">(</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token boolean">NULL</span><span class="token punctuation">)</span> <span class="token operator">|</span>
<span class="token operator">+</span><span class="token comment">----------------------+----------------+-------------------+--------------------+</span>
<span class="token operator">|</span>                    <span class="token number">1</span> <span class="token operator">|</span>              <span class="token number">0</span> <span class="token operator">|</span> <span class="token boolean">NULL</span>              <span class="token operator">|</span>                  <span class="token number">1</span> <span class="token operator">|</span>
<span class="token operator">+</span><span class="token comment">----------------------+----------------+-------------------+--------------------+</span>
<span class="token number">1</span> <span class="token keyword">row</span> <span class="token operator">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span><span class="token number">0.04</span> sec<span class="token punctuation">)</span>

<span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> title_info <span class="token keyword">WHERE</span> <span class="token identifier"><span class="token punctuation">\`</span>type<span class="token punctuation">\`</span></span> <span class="token operator">IN</span> <span class="token punctuation">(</span><span class="token string">&#39;S&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;D&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment"># NOT IN 运算符</span>
mysql<span class="token operator">&gt;</span> <span class="token keyword">SELECT</span> <span class="token string">&#39;a&#39;</span> <span class="token operator">NOT</span> <span class="token operator">IN</span> <span class="token punctuation">(</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;b&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;c&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">1</span> <span class="token operator">NOT</span> <span class="token operator">IN</span> <span class="token punctuation">(</span> <span class="token number">2</span> <span class="token punctuation">,</span> <span class="token number">3</span> <span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token boolean">NULL</span> <span class="token operator">NOT</span> <span class="token operator">IN</span> <span class="token punctuation">(</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;b&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&#39;a&#39;</span> <span class="token operator">NOT</span> <span class="token operator">IN</span> <span class="token punctuation">(</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token boolean">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token operator">+</span><span class="token comment">--------------------------+--------------------+-----------------------+------------------------+</span>
<span class="token operator">|</span> <span class="token string">&#39;a&#39;</span> <span class="token operator">NOT</span> <span class="token operator">IN</span> <span class="token punctuation">(</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;b&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;c&#39;</span><span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token number">1</span> <span class="token operator">NOT</span> <span class="token operator">IN</span> <span class="token punctuation">(</span> <span class="token number">2</span> <span class="token punctuation">,</span> <span class="token number">3</span> <span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token boolean">NULL</span> <span class="token operator">NOT</span> <span class="token operator">IN</span> <span class="token punctuation">(</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;b&#39;</span><span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token string">&#39;a&#39;</span> <span class="token operator">NOT</span> <span class="token operator">IN</span> <span class="token punctuation">(</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token boolean">NULL</span><span class="token punctuation">)</span> <span class="token operator">|</span>
<span class="token operator">+</span><span class="token comment">--------------------------+--------------------+-----------------------+------------------------+</span>
<span class="token operator">|</span>                        <span class="token number">0</span> <span class="token operator">|</span>                  <span class="token number">1</span> <span class="token operator">|</span> <span class="token boolean">NULL</span>                  <span class="token operator">|</span>                      <span class="token number">0</span> <span class="token operator">|</span>
<span class="token operator">+</span><span class="token comment">--------------------------+--------------------+-----------------------+------------------------+</span>
<span class="token number">1</span> <span class="token keyword">row</span> <span class="token operator">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span><span class="token number">0.04</span> sec<span class="token punctuation">)</span>

<span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> title_info <span class="token keyword">WHERE</span> <span class="token identifier"><span class="token punctuation">\`</span>type<span class="token punctuation">\`</span></span> <span class="token operator">NOT</span> <span class="token operator">IN</span> <span class="token punctuation">(</span><span class="token string">&#39;S&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;D&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h3 id="like-运算符" tabindex="-1"><a class="header-anchor" href="#like-运算符" aria-hidden="true">#</a> LIKE 运算符</h3><p>  LIKE 运算符主要用来匹配字符串，通常用于模糊匹配，如果满足条件则返回 1，否则返回 0。如果给定的值或者匹配条件为 NULL，则返回结果为 NULL。</p><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token operator">%</span> ：匹配 <span class="token number">0</span> 个或多个字符
_ ：只能匹配一个字符

<span class="token comment"># 查询包含&#39;安全&#39;的数据</span>
<span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> title_info <span class="token keyword">WHERE</span> question <span class="token operator">LIKE</span> <span class="token string">&#39;%安全%&#39;</span><span class="token punctuation">;</span>
<span class="token comment"># 查询以&#39;安全&#39;结束的数据</span>
<span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> title_info <span class="token keyword">WHERE</span> question <span class="token operator">LIKE</span> <span class="token string">&#39;%安全&#39;</span><span class="token punctuation">;</span>
<span class="token comment"># 查询以&#39;安全&#39;开始的数据</span>
<span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> title_info <span class="token keyword">WHERE</span> question <span class="token operator">LIKE</span> <span class="token string">&#39;安全%&#39;</span><span class="token punctuation">;</span>
<span class="token comment"># 查询第二个字符是&#39;安全&#39;的数据</span>
<span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> title_info <span class="token keyword">WHERE</span> question <span class="token operator">LIKE</span> <span class="token string">&#39;_安%&#39;</span><span class="token punctuation">;</span>
</code></pre></div><div class="hint-container tip"><p class="hint-container-title">转义字符</p><p>如果使用<code>\\</code>表示转义，要省略<code>ESCAPE</code>；如果不是<code>\\</code>，则要加上<code>ESCAPE</code>。</p><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token comment"># 查询以&#39;安全_&#39;开始的数据</span>
<span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> title_info <span class="token keyword">WHERE</span> question <span class="token operator">LIKE</span> <span class="token string">&#39;安全\\_%&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> title_info <span class="token keyword">WHERE</span> question <span class="token operator">LIKE</span> <span class="token string">&#39;安全$_%&#39;</span> <span class="token keyword">ESCAPE</span> <span class="token string">&#39;$&#39;</span><span class="token punctuation">;</span>
</code></pre></div></div><h3 id="regexp-rlike-运算符" tabindex="-1"><a class="header-anchor" href="#regexp-rlike-运算符" aria-hidden="true">#</a> REGEXP / RLIKE 运算符</h3><p><strong>语法格式</strong>：<code>expr REGEXP / RLIKE 匹配条件</code></p><p>如果<code>expr</code>满足匹配条件，返回 1；如果不满足，则返回 0。若<code>expr</code>或匹配条件任意一个为 NULL，则结果为 NULL。</p><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token comment"># 常用的有下面几种通配符</span>
<span class="token comment">-- ^ 匹配以该字符后面的字符开头的字符串</span>
<span class="token comment">-- $ 匹配以该字符前面的字符结尾的字符串</span>
<span class="token comment">-- . 匹配任何一个单字符</span>
<span class="token comment">-- * 匹配零个或多个在它前面的字符</span>
<span class="token comment">-- [...] 匹配在方括号内的任何字符</span>

<span class="token keyword">SELECT</span> <span class="token string">&#39;Tweet&#39;</span> <span class="token operator">RLIKE</span> <span class="token string">&#39;^Tw.*t$&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">SELECT</span> <span class="token string">&#39;Tweet&#39;</span> <span class="token operator">REGEXP</span> <span class="token string">&#39;^Tw.*t$&#39;</span><span class="token punctuation">;</span>
</code></pre></div><h2 id="逻辑运算符" tabindex="-1"><a class="header-anchor" href="#逻辑运算符" aria-hidden="true">#</a> 逻辑运算符</h2><table><thead><tr><th style="text-align:center;">运算符</th><th>作用</th><th>示例</th></tr></thead><tbody><tr><td style="text-align:center;"><code>NOT</code>或<code>!</code></td><td>逻辑非</td><td><code>SELECT NOT A;</code></td></tr><tr><td style="text-align:center;"><code>AND</code>或<code>&amp;&amp;</code></td><td>逻辑与</td><td><code>SELECT A AND B;</code><br><code>SELECT A &amp;&amp; B;</code></td></tr><tr><td style="text-align:center;"><code>OR</code>或<code>||</code></td><td>逻辑或</td><td><code>SELECT A OR B;</code><br><code>SELECT A || B;</code></td></tr><tr><td style="text-align:center;"><code>XOR</code></td><td>逻辑异或</td><td><code>SELECT XOR A;</code></td></tr></tbody></table><h3 id="逻辑非运算符" tabindex="-1"><a class="header-anchor" href="#逻辑非运算符" aria-hidden="true">#</a> 逻辑非运算符</h3><div class="language-sql" data-ext="sql"><pre class="language-sql"><code>mysql<span class="token operator">&gt;</span> <span class="token keyword">SELECT</span> <span class="token operator">NOT</span> <span class="token number">1</span> <span class="token punctuation">,</span> <span class="token operator">NOT</span> <span class="token number">0</span> <span class="token punctuation">,</span> <span class="token operator">NOT</span><span class="token punctuation">(</span> <span class="token number">1</span> <span class="token operator">+</span> <span class="token number">1</span> <span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token operator">!</span> <span class="token number">1</span> <span class="token punctuation">,</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">;</span>
<span class="token operator">+</span><span class="token comment">-------+-------+--------------+-----+----------+</span>
<span class="token operator">|</span> <span class="token operator">NOT</span> <span class="token number">1</span> <span class="token operator">|</span> <span class="token operator">NOT</span> <span class="token number">0</span> <span class="token operator">|</span> <span class="token operator">NOT</span><span class="token punctuation">(</span> <span class="token number">1</span> <span class="token operator">+</span> <span class="token number">1</span> <span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token operator">!</span> <span class="token number">1</span> <span class="token operator">|</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token operator">|</span>
<span class="token operator">+</span><span class="token comment">-------+-------+--------------+-----+----------+</span>
<span class="token operator">|</span>     <span class="token number">0</span> <span class="token operator">|</span>     <span class="token number">1</span> <span class="token operator">|</span>            <span class="token number">0</span> <span class="token operator">|</span>   <span class="token number">0</span> <span class="token operator">|</span> <span class="token boolean">NULL</span>     <span class="token operator">|</span>
<span class="token operator">+</span><span class="token comment">-------+-------+--------------+-----+----------+</span>
<span class="token number">1</span> <span class="token keyword">row</span> <span class="token operator">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span><span class="token number">0.04</span> sec<span class="token punctuation">)</span>
</code></pre></div><h3 id="逻辑与运算符" tabindex="-1"><a class="header-anchor" href="#逻辑与运算符" aria-hidden="true">#</a> 逻辑与运算符</h3><div class="language-sql" data-ext="sql"><pre class="language-sql"><code>mysql<span class="token operator">&gt;</span> <span class="token keyword">SELECT</span> <span class="token number">1</span> <span class="token operator">AND</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token punctuation">,</span> <span class="token number">0</span> <span class="token operator">AND</span> <span class="token number">1</span> <span class="token punctuation">,</span> <span class="token number">0</span> <span class="token operator">AND</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span> <span class="token number">1</span> <span class="token operator">AND</span> <span class="token boolean">NULL</span><span class="token punctuation">;</span>
<span class="token operator">+</span><span class="token comment">----------+---------+------------+------------+</span>
<span class="token operator">|</span> <span class="token number">1</span> <span class="token operator">AND</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token operator">|</span> <span class="token number">0</span> <span class="token operator">AND</span> <span class="token number">1</span> <span class="token operator">|</span> <span class="token number">0</span> <span class="token operator">AND</span> <span class="token boolean">NULL</span> <span class="token operator">|</span> <span class="token number">1</span> <span class="token operator">AND</span> <span class="token boolean">NULL</span> <span class="token operator">|</span>
<span class="token operator">+</span><span class="token comment">----------+---------+------------+------------+</span>
<span class="token operator">|</span>        <span class="token number">1</span> <span class="token operator">|</span>       <span class="token number">0</span> <span class="token operator">|</span>          <span class="token number">0</span> <span class="token operator">|</span> <span class="token boolean">NULL</span>       <span class="token operator">|</span>
<span class="token operator">+</span><span class="token comment">----------+---------+------------+------------+</span>
<span class="token number">1</span> <span class="token keyword">row</span> <span class="token operator">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span><span class="token number">0.04</span> sec<span class="token punctuation">)</span>
</code></pre></div><h3 id="逻辑或运算符" tabindex="-1"><a class="header-anchor" href="#逻辑或运算符" aria-hidden="true">#</a> 逻辑或运算符</h3><div class="language-sql" data-ext="sql"><pre class="language-sql"><code>mysql<span class="token operator">&gt;</span> <span class="token keyword">SELECT</span> <span class="token number">1</span> <span class="token operator">OR</span> <span class="token operator">-</span> <span class="token number">1</span> <span class="token punctuation">,</span> <span class="token number">1</span> <span class="token operator">OR</span> <span class="token number">0</span> <span class="token punctuation">,</span> <span class="token number">1</span> <span class="token operator">OR</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span> <span class="token number">0</span> <span class="token operator">||</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span> <span class="token boolean">NULL</span> <span class="token operator">||</span> <span class="token boolean">NULL</span><span class="token punctuation">;</span>
<span class="token operator">+</span><span class="token comment">----------+--------+-----------+-----------+--------------+</span>
<span class="token operator">|</span> <span class="token number">1</span> <span class="token operator">OR</span> <span class="token operator">-</span> <span class="token number">1</span> <span class="token operator">|</span> <span class="token number">1</span> <span class="token operator">OR</span> <span class="token number">0</span> <span class="token operator">|</span> <span class="token number">1</span> <span class="token operator">OR</span> <span class="token boolean">NULL</span> <span class="token operator">|</span> <span class="token number">0</span> <span class="token operator">||</span> <span class="token boolean">NULL</span> <span class="token operator">|</span> <span class="token boolean">NULL</span> <span class="token operator">||</span> <span class="token boolean">NULL</span> <span class="token operator">|</span>
<span class="token operator">+</span><span class="token comment">----------+--------+-----------+-----------+--------------+</span>
<span class="token operator">|</span>        <span class="token number">1</span> <span class="token operator">|</span>      <span class="token number">1</span> <span class="token operator">|</span>         <span class="token number">1</span> <span class="token operator">|</span> <span class="token boolean">NULL</span>      <span class="token operator">|</span> <span class="token boolean">NULL</span>         <span class="token operator">|</span>
<span class="token operator">+</span><span class="token comment">----------+--------+-----------+-----------+--------------+</span>
<span class="token number">1</span> <span class="token keyword">row</span> <span class="token operator">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span><span class="token number">0.04</span> sec<span class="token punctuation">)</span>
</code></pre></div><h3 id="逻辑异或运算符" tabindex="-1"><a class="header-anchor" href="#逻辑异或运算符" aria-hidden="true">#</a> 逻辑异或运算符</h3><div class="language-sql" data-ext="sql"><pre class="language-sql"><code>mysql<span class="token operator">&gt;</span> <span class="token keyword">SELECT</span> <span class="token number">1</span> <span class="token operator">XOR</span> <span class="token operator">-</span> <span class="token number">1</span> <span class="token punctuation">,</span> <span class="token number">1</span> <span class="token operator">XOR</span> <span class="token number">0</span> <span class="token punctuation">,</span> <span class="token number">0</span> <span class="token operator">XOR</span> <span class="token number">0</span> <span class="token punctuation">,</span> <span class="token number">1</span> <span class="token operator">XOR</span> <span class="token boolean">NULL</span><span class="token punctuation">;</span>
<span class="token operator">+</span><span class="token comment">-----------+---------+---------+------------+</span>
<span class="token operator">|</span> <span class="token number">1</span> <span class="token operator">XOR</span> <span class="token operator">-</span> <span class="token number">1</span> <span class="token operator">|</span> <span class="token number">1</span> <span class="token operator">XOR</span> <span class="token number">0</span> <span class="token operator">|</span> <span class="token number">0</span> <span class="token operator">XOR</span> <span class="token number">0</span> <span class="token operator">|</span> <span class="token number">1</span> <span class="token operator">XOR</span> <span class="token boolean">NULL</span> <span class="token operator">|</span>
<span class="token operator">+</span><span class="token comment">-----------+---------+---------+------------+</span>
<span class="token operator">|</span>         <span class="token number">0</span> <span class="token operator">|</span>       <span class="token number">1</span> <span class="token operator">|</span>       <span class="token number">0</span> <span class="token operator">|</span> <span class="token boolean">NULL</span>       <span class="token operator">|</span>
<span class="token operator">+</span><span class="token comment">-----------+---------+---------+------------+</span>
<span class="token number">1</span> <span class="token keyword">row</span> <span class="token operator">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span><span class="token number">0.04</span> sec<span class="token punctuation">)</span>
</code></pre></div><blockquote><p>相异为真</p></blockquote><h2 id="位运算符" tabindex="-1"><a class="header-anchor" href="#位运算符" aria-hidden="true">#</a> 位运算符</h2><table><thead><tr><th style="text-align:center;">运算符</th><th>作用</th><th>示例</th></tr></thead><tbody><tr><td style="text-align:center;"><code>&amp;</code></td><td>按位与</td><td><code>SELECT A &amp; B;</code></td></tr><tr><td style="text-align:center;"><code>|</code></td><td>按位或</td><td><code>SELECT A | B;</code></td></tr><tr><td style="text-align:center;"><code>^</code></td><td>按位异或</td><td><code>SELECT A ^ B;</code></td></tr><tr><td style="text-align:center;"><code>~</code></td><td>按位取反</td><td><code>SELECT ~A;</code></td></tr><tr><td style="text-align:center;"><code>&lt;&lt;</code></td><td>按位左移</td><td><code>SELECT A &lt;&lt; 2;</code></td></tr><tr><td style="text-align:center;"><code>&gt;&gt;</code></td><td>按位右移</td><td><code>SELECT A &gt;&gt; 2;</code></td></tr></tbody></table><blockquote><p>位运算符是在<mark>二进制数</mark>上进行计算的运算符。位运算会先将操作数变成二进制数，进行位运算。然后再将计算结果从二进制数变回十进制数。</p></blockquote><div class="language-sql" data-ext="sql"><pre class="language-sql"><code>mysql<span class="token operator">&gt;</span> <span class="token keyword">SELECT</span> <span class="token number">3</span> <span class="token operator">&amp;</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">3</span> <span class="token operator">|</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">3</span> <span class="token operator">^</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token operator">~</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">8</span> <span class="token operator">&lt;&lt;</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">8</span> <span class="token operator">&gt;&gt;</span> <span class="token number">2</span><span class="token punctuation">;</span>
<span class="token operator">+</span><span class="token comment">-------+-------+-------+----------------------+--------+--------+</span>
<span class="token operator">|</span> <span class="token number">3</span> <span class="token operator">&amp;</span> <span class="token number">5</span> <span class="token operator">|</span> <span class="token number">3</span> <span class="token operator">|</span> <span class="token number">5</span> <span class="token operator">|</span> <span class="token number">3</span> <span class="token operator">^</span> <span class="token number">6</span> <span class="token operator">|</span> <span class="token operator">~</span><span class="token number">3</span>                   <span class="token operator">|</span> <span class="token number">8</span> <span class="token operator">&lt;&lt;</span> <span class="token number">2</span> <span class="token operator">|</span> <span class="token number">8</span> <span class="token operator">&gt;&gt;</span> <span class="token number">2</span> <span class="token operator">|</span>
<span class="token operator">+</span><span class="token comment">-------+-------+-------+----------------------+--------+--------+</span>
<span class="token operator">|</span>     <span class="token number">1</span> <span class="token operator">|</span>     <span class="token number">7</span> <span class="token operator">|</span>     <span class="token number">5</span> <span class="token operator">|</span> <span class="token number">18446744073709551612</span> <span class="token operator">|</span>     <span class="token number">32</span> <span class="token operator">|</span>      <span class="token number">2</span> <span class="token operator">|</span>
<span class="token operator">+</span><span class="token comment">-------+-------+-------+----------------------+--------+--------+</span>
<span class="token number">1</span> <span class="token keyword">row</span> <span class="token operator">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span><span class="token number">0.04</span> sec<span class="token punctuation">)</span>
</code></pre></div><figure><img src="`+t+'" alt="计算演示.png" tabindex="0" loading="lazy"><figcaption>计算演示.png</figcaption></figure><h2 id="运算符的优先级" tabindex="-1"><a class="header-anchor" href="#运算符的优先级" aria-hidden="true">#</a> 运算符的优先级</h2><figure><img src="'+o+'" alt="运算符优先级.png" tabindex="0" loading="lazy"><figcaption>运算符优先级.png</figcaption></figure><div class="hint-container tip"><p class="hint-container-title">提示</p><p>数字编号越大，优先级越高，优先级高的运算符先进行计算。可以看到，赋值运算符的优先级最低，使用<code>()</code>括起来的表达式的优先级最高。</p></div><h2 id="扩展-使用正则表达式查询" tabindex="-1"><a class="header-anchor" href="#扩展-使用正则表达式查询" aria-hidden="true">#</a> 扩展：使用正则表达式查询</h2><figure><img src="'+e+'" alt="正则通配符说明.png" tabindex="0" loading="lazy"><figcaption>正则通配符说明.png</figcaption></figure>',69),l=[r];function k(u,d){return n(),a("div",null,l)}const m=s(c,[["render",k],["__file","operator.html.vue"]]);export{m as default};
