import{_ as p,l as e,o as c,c as l,g as s,k as n,i as o,a}from"./app-uKx7KVXM.js";const r={},u=a(`<h2 id="自动编译文件" tabindex="-1"><a class="header-anchor" href="#自动编译文件" aria-hidden="true">#</a> 自动编译文件</h2><p>编译文件时，使用<code>-w</code>指令后，TS 编译器会自动监视文件的变化，并在文件发生变化时对文件进行重新编译</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code>tsc xxx.ts <span class="token parameter variable">-w</span>
</code></pre></div><h2 id="自动编译整个项目" tabindex="-1"><a class="header-anchor" href="#自动编译整个项目" aria-hidden="true">#</a> 自动编译整个项目</h2><p>如果直接使用 tsc 指令，则可以自动将当前项目下的所有 ts 文件编译为 js 文件，但是能直接使用 tsc 命令的前提是要先在项目根目录下创建一个 ts 的配置文件<code>tsconfig.json</code>，它是一个 JSON 文件，有了它只需 tsc 命令即可完成对整个项目的编译。</p>`,5),k={href:"https://www.tslang.cn/docs/handbook/tsconfig-json.html",target:"_blank",rel:"noopener noreferrer"},i=a(`<p><code>tsconfig.json</code>：</p><p>① <strong>配置选项</strong>：</p><div class="language-json" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;include&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;./src/**/*&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment">// 指定需要编译的ts目录 (**:任意目录 ｜ *:任意文件)</span>
  <span class="token property">&quot;exclude&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;node_modules&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment">// 定义需要排除在外的目录(默认值：[&quot;node_modules&quot;, &quot;bower_components&quot;, &quot;jspm_packages&quot;])</span>
  <span class="token property">&quot;extends&quot;</span><span class="token operator">:</span> <span class="token string">&quot;./configs/base&quot;</span><span class="token punctuation">,</span> <span class="token comment">// 定义被继承的配置文件</span>
  <span class="token property">&quot;files&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;core.ts&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;sys.ts&quot;</span><span class="token punctuation">]</span> <span class="token comment">// 指定被编译文件的列表(很少用)</span>
<span class="token punctuation">}</span>
</code></pre></div><p>② <strong>编译选项</strong>：</p>`,4),q={href:"https://www.tslang.cn/docs/handbook/compiler-options.html",target:"_blank",rel:"noopener noreferrer"},m=a(`<div class="language-json" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;include&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token property">&quot;compilerOptions&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;target&quot;</span><span class="token operator">:</span> <span class="token string">&quot;ES6&quot;</span><span class="token punctuation">,</span> <span class="token comment">// 指定编译版本</span>
    <span class="token property">&quot;module&quot;</span><span class="token operator">:</span> <span class="token string">&quot;ES6&quot;</span><span class="token punctuation">,</span> <span class="token comment">// 指定编译后代码使用的模块化系统</span>
    <span class="token property">&quot;lib&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;DOM&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment">// 指定代码运行时所包含的库(正常不需要设置)</span>
    <span class="token property">&quot;outDir&quot;</span><span class="token operator">:</span> <span class="token string">&quot;./dist&quot;</span><span class="token punctuation">,</span> <span class="token comment">// 指定编译后文件的所在目录</span>
    <span class="token property">&quot;outFile&quot;</span><span class="token operator">:</span> <span class="token string">&quot;./dist/app.js&quot;</span><span class="token punctuation">,</span> <span class="token comment">// 将代码合并为一个文件</span>
    <span class="token property">&quot;allowJs&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment">// 是否编译javascript文件</span>
    <span class="token property">&quot;checkJs&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment">// 是否检查js代码符合语法规范</span>
    <span class="token property">&quot;removeComments&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// 是否移除注释</span>
    <span class="token property">&quot;noEmit&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// 是否生成输出文件</span>
    <span class="token property">&quot;noEmitOnError&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// 报错时不生成输出文件</span>
    <span class="token property">&quot;strict&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// 启用所有严格类型检查选项</span>
    <span class="token property">&quot;alwaysStrict&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// 以严格模式解析并为每个源文件生成&quot;use strict&quot;语句</span>
    <span class="token property">&quot;noImplicitAny&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// 在表达式和声明上有隐含的any类型时报错</span>
    <span class="token property">&quot;noImplicitThis&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment">// 当this表达式的值为any类型的时候，生成一个错误</span>
    <span class="token property">&quot;strictNullChecks&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token comment">// 严格检查空值</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div>`,1);function d(h,g){const t=e("ExternalLinkIcon");return c(),l("div",null,[u,s("p",null,[n("配置属性可参考："),s("a",k,[n("https://www.tslang.cn/docs/handbook/tsconfig-json.html"),o(t)])]),i,s("p",null,[n("参考："),s("a",q,[n("https://www.tslang.cn/docs/handbook/compiler-options.html"),o(t)])]),m])}const y=p(r,[["render",d],["__file","compilation_options.html.vue"]]);export{y as default};
