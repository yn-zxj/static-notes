import{_ as p,M as t,Y as c,a0 as s,a1 as n,Z as e,a2 as o,C as l}from"./framework-0d8205ef.js";const r="/assets/system_variables-483616e8.png",k={},i=s("h2",{id:"_1-变量",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#_1-变量","aria-hidden":"true"},"#"),n(" 1.变量")],-1),d=s("p",null,[n("  在 MySQL 数据库的存储过程和函数中，可以使用变量来存储查询或计算的中间结果数据，或者输出最终的结果数据。在 MySQL 数据库中，变量分为"),s("code",null,"系统变量"),n("以及用户"),s("code",null,"自定义变量"),n("。")],-1),u=s("h3",{id:"_1-1-系统变量",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#_1-1-系统变量","aria-hidden":"true"},"#"),n(" 1.1 系统变量")],-1),m=s("p",null,"  变量由系统定义，不是用户定义，属于服务器层面。启动 MySQL 服务，生成 MySQL 服务实例期间，MySQL 将为 MySQL 服务器内存中的系统变量赋值，这些系统变量定义了当前 MySQL 服务实例的属性、特征。这些系统变量的值要么是编译 MySQL 时参数的默认值，要么是配置文件（例如 my.ini 等）中的参数值。",-1),S=s("br",null,null,-1),y={href:"https://dev.mysql.com/doc/refman/5.7/en/server-system-variables.html",target:"_blank",rel:"noopener noreferrer"},_=s("br",null,null,-1),L={href:"https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html",target:"_blank",rel:"noopener noreferrer"},h=o('<p>  系统变量分为<mark>全局系统变量</mark>（需要添加 global 关键字）以及<mark>会话系统变量</mark>（需要添加 session 关键字），<u>有时也把全局系统变量简称为全局变量，有时也把会话系统变量称为 local 变量</u>。 如果不写，<mark>默认会话级别</mark>。 静态变量（在 MySQL 服务实例运行期间它们的值不能使用 set 动态修改）属于特殊的全局系统变量。<br>   在 MySQL 中有些系统变量只能是全局的，例如<code>max_connections</code>用于限制服务器的最大连接数；有些系统变量作用域既可以是全局又可以是会话，例如 <code>character_set_client</code>用于设置客户端的字符集；有些系统变量的作用域只能是当前会话，例如<code>pseudo_thread_id</code>用于标记当前会话的 MySQL 连接 ID。</p><div class="hint-container tip"><p class="hint-container-title">提示</p><p>每一个 MySQL 客户机成功连接 MySQL 服务器后，都会产生与之对应的会话。会话期间，MySQL 服务实例会在 MySQL 服务器内存中生成与该会话对应的会话系统变量，这些会话系统变量的初始值是全局系统变量值的复制。如下图：</p><figure><img src="'+r+`" alt="System Variables.png" width="450" tabindex="0" loading="lazy"><figcaption>System Variables.png</figcaption></figure><p>① 全局系统变量针对于所有会话(连接)有效，但<mark>不能跨重启</mark>；</p><p>② 会话 1 对某个全局系统变量值的修改会导致会话 2 中同一个全局系统变量值的修改。</p><p>③ 会话系统变量仅针对于当前会话(连接)有效。会话期间，当前会话对某个会话系统变量值的修改，不会影响其他会话同一个会话系统变量的值。</p></div><hr><p><strong>查看系统变量</strong>：</p><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token comment"># GLOBAL：全局系统变量</span>
<span class="token comment"># SESSION：会话系统变量</span>
<span class="token keyword">SHOW</span> <span class="token punctuation">[</span><span class="token keyword">GLOBAL</span> <span class="token operator">|</span> <span class="token keyword">SESSION</span><span class="token punctuation">]</span> VARIABLES <span class="token punctuation">[</span><span class="token operator">LIKE</span> <span class="token string">&#39;pattern&#39;</span> <span class="token operator">|</span> <span class="token keyword">WHERE</span> expr<span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token comment"># 省略[GLOBAL | SESSION]，默认查询会话变量</span>
<span class="token keyword">SHOW</span> VARIABLES<span class="token punctuation">;</span> <span class="token comment"># 查询所有的会话变量</span>

<span class="token comment"># 例如</span>
<span class="token keyword">SHOW</span> <span class="token keyword">GLOBAL</span> VARIABLES <span class="token operator">LIKE</span> <span class="token string">&#39;%size%&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">SHOW</span> <span class="token keyword">SESSION</span> VARIABLES <span class="token operator">LIKE</span> <span class="token string">&#39;max_join_size&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">SHOW</span> VARIABLES <span class="token operator">LIKE</span> <span class="token string">&#39;max_join_size&#39;</span><span class="token punctuation">;</span>
</code></pre></div><hr><p><strong>查看指定系统变量</strong>：</p><p>  作为 MySQL 编码规范，MySQL 中的系统变量以两个<code>@</code>开头，其中<code>@@GLOBAL</code>仅用于标记全局系统变量，<code>@@SESSION</code>仅用于标记会话系统变量。<code>@@</code>首先标记会话系统变量，如果会话系统变量不存在，则标记全局系统变量。</p><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token comment"># 查看全局系统变量或会话系统变量的值</span>
<span class="token keyword">SELECT</span> @@<span class="token punctuation">[</span><span class="token keyword">GLOBAL</span><span class="token punctuation">.</span> <span class="token operator">|</span> <span class="token keyword">SESSION</span><span class="token punctuation">.</span><span class="token punctuation">]</span> var_name<span class="token punctuation">;</span>

<span class="token comment"># 例如</span>
<span class="token keyword">SELECT</span> @<span class="token variable">@GLOBAL.innodb_data_file_path</span><span class="token punctuation">;</span> <span class="token comment"># 全局系统变量</span>
<span class="token keyword">SELECT</span> @<span class="token variable">@SESSION.max_join_size</span><span class="token punctuation">;</span> <span class="token comment"># 会话系统变量</span>
<span class="token keyword">SELECT</span> @<span class="token variable">@max_join_size</span><span class="token punctuation">;</span> <span class="token comment"># 会话系统变量</span>
</code></pre></div><hr><p><strong>修改系统变量的值</strong>：</p><p>方式一：修改 MySQL 配置文件，继而修改 MySQL 系统变量的值（该方法需要重启 MySQL 服务）；</p><p>方式二：在 MySQL 服务运行期间，使用<code>SET</code>命令重新设置系统变量的值：</p><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token comment"># 修改会话系统变量</span>
<span class="token keyword">SET</span> @<span class="token variable">@SESSION.var_name</span> <span class="token operator">=</span> <span class="token keyword">value</span><span class="token punctuation">;</span>
<span class="token keyword">SET</span> <span class="token keyword">SESSION</span> var_name <span class="token operator">=</span> <span class="token keyword">value</span><span class="token punctuation">;</span>
<span class="token keyword">SET</span> var_name <span class="token operator">=</span> <span class="token keyword">value</span><span class="token punctuation">;</span>
<span class="token keyword">SET</span> @<span class="token variable">@var_name</span> <span class="token operator">=</span> <span class="token keyword">value</span><span class="token punctuation">;</span>

<span class="token comment"># 修改全局系统变量</span>
<span class="token keyword">SET</span> @<span class="token variable">@GLOBAL.var_name</span> <span class="token operator">=</span> <span class="token keyword">value</span><span class="token punctuation">;</span>
<span class="token keyword">SET</span> <span class="token keyword">GLOBAL</span> var_name <span class="token operator">=</span> <span class="token keyword">value</span><span class="token punctuation">;</span>
</code></pre></div><p><strong>示例</strong>：</p><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token comment"># 会话系统变量</span>
<span class="token keyword">SELECT</span> @<span class="token variable">@SESSION.auto_increment_offset</span><span class="token punctuation">;</span>

<span class="token keyword">SET</span> @<span class="token variable">@SESSION.auto_increment_offset</span> <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>
<span class="token keyword">SET</span> <span class="token keyword">SESSION</span> auto_increment_offset <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span>
<span class="token keyword">SET</span> auto_increment_offset <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">;</span>
<span class="token keyword">SET</span> @<span class="token variable">@auto_increment_offset</span> <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span>

<span class="token comment"># 全局系统变量</span>
<span class="token keyword">SELECT</span> @<span class="token variable">@GLOBAL.auto_increment_offset</span><span class="token punctuation">;</span>

<span class="token keyword">SET</span> @<span class="token variable">@GLOBAL</span> auto_increment_offset <span class="token operator">=</span> <span class="token string">&#39;2&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">SET</span> <span class="token keyword">GLOBAL</span> auto_increment_offset <span class="token operator">=</span> <span class="token string">&#39;3&#39;</span><span class="token punctuation">;</span>
</code></pre></div><h3 id="_1-2-用户变量" tabindex="-1"><a class="header-anchor" href="#_1-2-用户变量" aria-hidden="true">#</a> 1.2 用户变量</h3><p>  用户变量是用户自己定义的，作为 MySQL 编码规范，MySQL 中的用户变量以一个<code>@</code>开头。根据作用范围不同，又分为<mark>会话用户变量</mark>和<mark>局部变量</mark>。</p><blockquote><p>会话用户变量：作用域和会话变量一样，只对当前连接会话有效<br> 局部变量：只在<code>BEGIN</code>和<code>END</code>语句块中有效。<mark>局部变量只能在存储过程和函数中使用</mark></p></blockquote>`,19),v=s("br",null,null,-1),E={href:"https://dev.mysql.com/doc/refman/5.7/en/user-variables.html",target:"_blank",rel:"noopener noreferrer"},g=s("br",null,null,-1),w={href:"https://dev.mysql.com/doc/refman/8.0/en/user-variables.html",target:"_blank",rel:"noopener noreferrer"},b=o(`<h4 id="_1-2-1-用户会话变量" tabindex="-1"><a class="header-anchor" href="#_1-2-1-用户会话变量" aria-hidden="true">#</a> 1.2.1 用户会话变量</h4><p><strong>变量的定义</strong>：</p><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token comment"># 方式一： = 或 :=</span>
<span class="token keyword">SET</span> @用户变量 <span class="token operator">=</span> 值<span class="token punctuation">;</span>
<span class="token keyword">SET</span> @用户变量 :<span class="token operator">=</span> 值<span class="token punctuation">;</span>

<span class="token comment"># 方式二：:= 或 INTO关键字</span>
<span class="token keyword">SELECT</span> @用户变量 :<span class="token operator">=</span> 表达式 <span class="token punctuation">[</span><span class="token keyword">FROM</span> 等子句<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">SELECT</span> 表达式 <span class="token keyword">INTO</span> @用户变量 <span class="token punctuation">[</span><span class="token keyword">FROM</span> 等子句<span class="token punctuation">]</span><span class="token punctuation">;</span>
</code></pre></div><p><strong>查看用户变量的值</strong>：</p><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> @用户变量<span class="token punctuation">;</span>
</code></pre></div><hr><p><strong>示例</strong>：</p><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SET</span> <span class="token variable">@a</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment"># 或 SET @a := 1;</span>
<span class="token keyword">SELECT</span> <span class="token variable">@a</span><span class="token punctuation">;</span>

<span class="token keyword">SELECT</span> <span class="token variable">@num</span> :<span class="token operator">=</span> <span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">FROM</span> employees<span class="token punctuation">;</span>
<span class="token keyword">SELECT</span> <span class="token variable">@num</span><span class="token punctuation">;</span>

<span class="token keyword">SELECT</span> <span class="token function">AVG</span><span class="token punctuation">(</span>salary<span class="token punctuation">)</span> <span class="token keyword">INTO</span> <span class="token variable">@avgsalary</span> <span class="token keyword">FROM</span> employees<span class="token punctuation">;</span>
<span class="token keyword">SELECT</span> <span class="token variable">@avgsalary</span><span class="token punctuation">;</span>

<span class="token keyword">SELECT</span> <span class="token variable">@big</span><span class="token punctuation">;</span> <span class="token comment"># 查看某个未声明的变量时，将得到NULL值</span>
</code></pre></div><h4 id="_1-2-2-局部变量" tabindex="-1"><a class="header-anchor" href="#_1-2-2-局部变量" aria-hidden="true">#</a> 1.2.2 局部变量</h4>`,9);function f(O,T){const a=l("ExternalLinkIcon");return t(),c("div",null,[i,d,u,m,s("blockquote",null,[s("p",null,[n("系统变量官方文档："),S,n(" MySQL 5.7："),s("a",y,[n("https://dev.mysql.com/doc/refman/5.7/en/server-system-variables.html"),e(a)]),_,n(" MySQL 8.0："),s("a",L,[n("https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html"),e(a)])])]),h,s("p",null,[n("官方文档："),v,n(" MySQL 5.7："),s("a",E,[n("https://dev.mysql.com/doc/refman/5.7/en/user-variables.html"),e(a)]),g,n(" MySQL 8.0："),s("a",w,[n("https://dev.mysql.com/doc/refman/8.0/en/user-variables.html"),e(a)])]),b])}const M=p(k,[["render",f],["__file","variable_flow_cursor.html.vue"]]);export{M as default};
