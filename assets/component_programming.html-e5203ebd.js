import{_ as e,x as r,X as a,a1 as s}from"./framework-13dd6df4.js";const t={},n=s('<h2 id="_1-模块与组件、模块化与组件化" tabindex="-1"><a class="header-anchor" href="#_1-模块与组件、模块化与组件化" aria-hidden="true">#</a> 1.模块与组件、模块化与组件化</h2><p><em><strong>模块</strong></em>：<br> （1）理解：向外提供特定功能的 js 程序，一般就是一个 js 文件<br> （2）为什么：js 文件很多很复杂<br> （3）作用：复用、简化 js 的编写，提高 js 运行效率</p><p><em><strong>组件</strong></em>：<br> （1）定义：用来实现<mark>局部</mark>功能的<mark>代码和资源的集合</mark>(html/css/js/image...)<br> （2）为什么：一个界面的功能很复杂<br> （3）作用：复用编码，简化项目编码，提高运行效率</p><p><em><strong>模块化</strong></em>：当应用中的 js 都以模块来编写，那这个应用就是一个模块化的应用；</p><p><em><strong>组件化</strong></em>：当应用中的功能都是多组件的方式来编写，那这个应用就是一个组件化的应用；</p><h2 id="_2-非单文件组件" tabindex="-1"><a class="header-anchor" href="#_2-非单文件组件" aria-hidden="true">#</a> 2.非单文件组件</h2><h2 id="_3-单文件组件" tabindex="-1"><a class="header-anchor" href="#_3-单文件组件" aria-hidden="true">#</a> 3.单文件组件</h2>',7),o=[n];function m(c,h){return r(),a("div",null,o)}const i=e(t,[["render",m],["__file","component_programming.html.vue"]]);export{i as default};
