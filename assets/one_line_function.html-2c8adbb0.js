import{_ as o,j as p,o as c,c as d,f as n,i as s,g as a,a as e}from"./app-55965c53.js";const r="/assets/fx_string_demo-4193c4aa.png",l="/assets/params_of_extract-510439c7.png",k="/assets/type_date-b1090abb.png",u="/assets/get_format-47002968.png",i={},m=e(`<h2 id="函数的理解" tabindex="-1"><a class="header-anchor" href="#函数的理解" aria-hidden="true">#</a> 函数的理解</h2><p>  函数是完成一定功能的代码集合。根据函数所操作数据行数的不同，可以将 SQL 函数分类两类，单行函数和多行函数。其中单行函数仅对单个行进行计算，并且每行返回一个结果；而多行函数可以操作成组的多个行，每个行组返回一个结果，这些函数又称组函数。</p><h2 id="数值函数" tabindex="-1"><a class="header-anchor" href="#数值函数" aria-hidden="true">#</a> 数值函数</h2><h3 id="基本函数" tabindex="-1"><a class="header-anchor" href="#基本函数" aria-hidden="true">#</a> 基本函数</h3><table><thead><tr><th>函数</th><th>用法</th></tr></thead><tbody><tr><td><code>ABS(x)</code></td><td>返回 x 的绝对值</td></tr><tr><td><code>SIGN(X)</code></td><td>返回 X 的符号。正数返回 1 ，负数返回-1， 0 返回 0</td></tr><tr><td><code>PI()</code></td><td>返回圆周率的值</td></tr><tr><td><code>CEIL(x)</code> <code>CEILING(x)</code></td><td>返回大于或等于某个值的最小整数</td></tr><tr><td><code>FLOOR(x)</code></td><td>返回小于或等于某个值的最大整数</td></tr><tr><td><code>LEAST(e1,e2,e3…)</code></td><td>返回列表中的最小值</td></tr><tr><td><code>GREATEST(e1,e2,e3…)</code></td><td>返回列表中的最大值</td></tr><tr><td><code>MOD(x,y)</code></td><td>返回 X 除以 Y 后的余数</td></tr><tr><td><code>RAND()</code></td><td>返回 0~1 的随机值</td></tr><tr><td><code>RAND(x)</code></td><td>返回 0~1 的随机值，其中 x 的值用作种子值，相同的 X 值会产生相同的随机数</td></tr><tr><td><code>ROUND(x)</code></td><td>返回一个对 x 的值进行四舍五入后，最接近于 X 的整数</td></tr><tr><td><code>ROUND(x,y)</code></td><td>返回一个对 x 的值进行四舍五入后最接近 X 的值，并保留到小数点后面 Y 位</td></tr><tr><td><code>TRUNCATE(x,y)</code></td><td>返回数字 x 截断为 y 位小数的结果</td></tr><tr><td><code>SQRT(x)</code></td><td>返回 x 的平方根。当 X 的值为负数时，返回 NULL</td></tr></tbody></table><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token comment"># 天花板函数：CEIL、CEILING</span>
<span class="token comment"># 地板函数：FLOOR</span>
mysql<span class="token operator">&gt;</span> <span class="token keyword">SELECT</span> CEIL<span class="token punctuation">(</span><span class="token number">32.32</span><span class="token punctuation">)</span><span class="token punctuation">,</span> CEILING<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">43.23</span><span class="token punctuation">)</span><span class="token punctuation">,</span> FLOOR<span class="token punctuation">(</span><span class="token number">32.32</span><span class="token punctuation">)</span><span class="token punctuation">,</span> FLOOR<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">43.23</span><span class="token punctuation">)</span> <span class="token keyword">FROM</span> DUAL<span class="token punctuation">;</span>
<span class="token operator">+</span><span class="token comment">-------------+-----------------+--------------+---------------+</span>
<span class="token operator">|</span> CEIL<span class="token punctuation">(</span><span class="token number">32.32</span><span class="token punctuation">)</span> <span class="token operator">|</span> CEILING<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">43.23</span><span class="token punctuation">)</span> <span class="token operator">|</span> FLOOR<span class="token punctuation">(</span><span class="token number">32.32</span><span class="token punctuation">)</span> <span class="token operator">|</span> FLOOR<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">43.23</span><span class="token punctuation">)</span> <span class="token operator">|</span>
<span class="token operator">+</span><span class="token comment">-------------+-----------------+--------------+---------------+</span>
<span class="token operator">|</span>          <span class="token number">33</span> <span class="token operator">|</span>             <span class="token operator">-</span><span class="token number">43</span> <span class="token operator">|</span>           <span class="token number">32</span> <span class="token operator">|</span>           <span class="token operator">-</span><span class="token number">44</span> <span class="token operator">|</span>
<span class="token operator">+</span><span class="token comment">-------------+-----------------+--------------+---------------+</span>
<span class="token number">1</span> <span class="token keyword">row</span> <span class="token operator">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span><span class="token number">0.04</span> sec<span class="token punctuation">)</span>

<span class="token comment"># 指定种子值的随机为伪随机(有规律)</span>
mysql<span class="token operator">&gt;</span> <span class="token keyword">SELECT</span> RAND<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> RAND<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> RAND<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">,</span> RAND<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">,</span> RAND<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> RAND<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">FROM</span> DUAL<span class="token punctuation">;</span>

mysql<span class="token operator">&gt;</span> <span class="token keyword">SELECT</span> <span class="token function">ROUND</span><span class="token punctuation">(</span><span class="token number">12.66</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">ROUND</span><span class="token punctuation">(</span><span class="token number">12.624</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">ROUND</span><span class="token punctuation">(</span><span class="token number">12.324</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">TRUNCATE</span><span class="token punctuation">(</span><span class="token number">12.66</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">TRUNCATE</span><span class="token punctuation">(</span><span class="token number">12.66</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">FROM</span> DUAL<span class="token punctuation">;</span>
<span class="token operator">+</span><span class="token comment">--------------+-----------------+------------------+-------------------+--------------------+</span>
<span class="token operator">|</span> <span class="token function">ROUND</span><span class="token punctuation">(</span><span class="token number">12.66</span><span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token function">ROUND</span><span class="token punctuation">(</span><span class="token number">12.624</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token function">ROUND</span><span class="token punctuation">(</span><span class="token number">12.324</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token keyword">TRUNCATE</span><span class="token punctuation">(</span><span class="token number">12.66</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token keyword">TRUNCATE</span><span class="token punctuation">(</span><span class="token number">12.66</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">|</span>
<span class="token operator">+</span><span class="token comment">--------------+-----------------+------------------+-------------------+--------------------+</span>
<span class="token operator">|</span> <span class="token number">13</span>           <span class="token operator">|</span> <span class="token number">12.62</span>           <span class="token operator">|</span> <span class="token number">10</span>               <span class="token operator">|</span> <span class="token number">12.6</span>              <span class="token operator">|</span> <span class="token number">10</span>                 <span class="token operator">|</span>
<span class="token operator">+</span><span class="token comment">--------------+-----------------+------------------+-------------------+--------------------+</span>
<span class="token number">1</span> <span class="token keyword">row</span> <span class="token operator">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span><span class="token number">0.14</span> sec<span class="token punctuation">)</span>
</code></pre></div><h3 id="角度与弧度互换函数" tabindex="-1"><a class="header-anchor" href="#角度与弧度互换函数" aria-hidden="true">#</a> 角度与弧度互换函数</h3><table><thead><tr><th style="text-align:center;">函数</th><th>用法</th></tr></thead><tbody><tr><td style="text-align:center;"><code>RADIANS(x)</code></td><td>将角度转化为弧度，其中参数 x 为角度值</td></tr><tr><td style="text-align:center;"><code>DEGREES(x)</code></td><td>将弧度转化为角度，其中参数 x 为弧度值</td></tr></tbody></table><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token comment"># 角度转弧度：(π/180)*角度</span>
<span class="token comment"># 弧度转角度：(180/π)*弧度</span>
mysql<span class="token operator">&gt;</span> <span class="token keyword">SELECT</span> RADIANS<span class="token punctuation">(</span><span class="token number">180</span><span class="token punctuation">)</span><span class="token punctuation">,</span> RADIANS<span class="token punctuation">(</span><span class="token number">90</span><span class="token punctuation">)</span><span class="token punctuation">,</span> DEGREES<span class="token punctuation">(</span><span class="token number">2</span> <span class="token operator">*</span> PI<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">FROM</span> DUAL<span class="token punctuation">;</span>
<span class="token operator">+</span><span class="token comment">-------------------+--------------------+-------------------+</span>
<span class="token operator">|</span> RADIANS<span class="token punctuation">(</span><span class="token number">180</span><span class="token punctuation">)</span>      <span class="token operator">|</span> RADIANS<span class="token punctuation">(</span><span class="token number">90</span><span class="token punctuation">)</span>        <span class="token operator">|</span> DEGREES<span class="token punctuation">(</span><span class="token number">2</span> <span class="token operator">*</span> PI<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">|</span>
<span class="token operator">+</span><span class="token comment">-------------------+--------------------+-------------------+</span>
<span class="token operator">|</span> <span class="token number">3.141592653589793</span> <span class="token operator">|</span> <span class="token number">1.5707963267948966</span> <span class="token operator">|</span>               <span class="token number">360</span> <span class="token operator">|</span>
<span class="token operator">+</span><span class="token comment">-------------------+--------------------+-------------------+</span>
<span class="token number">1</span> <span class="token keyword">row</span> <span class="token operator">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span><span class="token number">0.04</span> sec<span class="token punctuation">)</span>
</code></pre></div><h3 id="三角函数" tabindex="-1"><a class="header-anchor" href="#三角函数" aria-hidden="true">#</a> 三角函数</h3>`,10),h={href:"https://baike.baidu.com/item/%E4%B8%89%E8%A7%92%E5%87%BD%E6%95%B0%E5%85%AC%E5%BC%8F/4374733",target:"_blank",rel:"noopener noreferrer"},E=n("br",null,null,-1),b={href:"https://baike.baidu.com/item/%E5%8F%8D%E4%B8%89%E8%A7%92%E5%87%BD%E6%95%B0/7004029",target:"_blank",rel:"noopener noreferrer"},T=e('<table><thead><tr><th>函数</th><th>用法</th></tr></thead><tbody><tr><td><code>SIN(x)</code></td><td>返回 x 的正弦值，其中，参数 x 为弧度值(对/斜)</td></tr><tr><td><code>ASIN(x)</code></td><td>返回 x 的反正弦值，即获取正弦为 x 的值。如果 x 的值不在- 1 到 1 之间，则返回 NULL()</td></tr><tr><td><code>COS(x)</code></td><td>返回 x 的余弦值，其中，参数 x 为弧度值(邻/斜)</td></tr><tr><td><code>ACOS(x)</code></td><td>返回 x 的反余弦值，即获取余弦为 x 的值。如果 x 的值不在- 1 到 1 之间，则返回 NULL</td></tr><tr><td><code>TAN(x)</code></td><td>返回 x 的正切值，其中，参数 x 为弧度值(对/邻)</td></tr><tr><td><code>ATAN(x)</code></td><td>返回 x 的反正切值，即返回正切值为 x 的值</td></tr><tr><td><code>ATAN2(m,n)</code></td><td>返回两个参数的反正切值</td></tr><tr><td><code>COT(x)</code></td><td>返回 x 的余切值，其中，X 为弧度值(邻/对)</td></tr></tbody></table><h3 id="指数和对数" tabindex="-1"><a class="header-anchor" href="#指数和对数" aria-hidden="true">#</a> 指数和对数</h3><table><thead><tr><th>函数</th><th>用法</th></tr></thead><tbody><tr><td><code>POW(x,y)</code> <code>POWER(X,Y)</code></td><td>返回 x 的 y 次方</td></tr><tr><td><code>EXP(X)</code></td><td>返回 e 的 X 次方，其中 e 是一个常数，2.718281828459045</td></tr><tr><td><code>LN(X)，LOG(X)</code></td><td>返回以 e 为底的 X 的对数，当 X &lt;= 0 时，返回的结果为 NULL</td></tr><tr><td><code>LOG10(X)</code></td><td>返回以 10 为底的 X 的对数，当 X &lt;= 0 时，返回的结果为 NULL</td></tr><tr><td><code>LOG2(X)</code></td><td>返回以 2 为底的 X 的对数，当 X &lt;= 0 时，返回 NULL</td></tr></tbody></table><h3 id="进制间的转换" tabindex="-1"><a class="header-anchor" href="#进制间的转换" aria-hidden="true">#</a> 进制间的转换</h3><table><thead><tr><th>函数</th><th>用法</th></tr></thead><tbody><tr><td><code>BIN(x)</code></td><td>返回 x 的二进制编码</td></tr><tr><td><code>HEX(x)</code></td><td>返回 x 的十六进制编码</td></tr><tr><td><code>OCT(x)</code></td><td>返回 x 的八进制编码</td></tr><tr><td><code>CONV(x,f1,f2)</code></td><td>返回 f1 进制数变成 f2 进制数</td></tr></tbody></table><h2 id="字符串函数" tabindex="-1"><a class="header-anchor" href="#字符串函数" aria-hidden="true">#</a> 字符串函数</h2><table><thead><tr><th>函数</th><th>用法</th></tr></thead><tbody><tr><td><code>ASCII(S)</code></td><td>返回字符串 S 中的第一个字符的 ASCII 码值</td></tr><tr><td><code>CHAR_LENGTH(s)</code></td><td>返回字符串 s 的字符数。作用与 CHARACTER_LENGTH(s)相同</td></tr><tr><td><code>LENGTH(s)</code></td><td>返回字符串 s 的字节数，和字符集有关</td></tr><tr><td><code>CONCAT(s1,s2,……,sn)</code></td><td>连接 s1, s2, ……, sn 为一个字符串</td></tr><tr><td><code>CONCAT_WS(x,s1,……,sn)</code></td><td>同 CONCAT(s1, s2, …)函数，但是每个字符串之间要加上 x</td></tr><tr><td><code>INSERT(str,idx,len,replacestr)</code></td><td>将字符串 str 从第 idx 位置开始，len 个字符长的子串替换为字符串 replacestr</td></tr><tr><td><code>REPLACE(str,a,b)</code></td><td>用字符串 b 替换字符串 str 中所有出现的字符串 a</td></tr><tr><td><code>UPPER(s)</code> <code>UCASE(s)</code></td><td>将字符串 s 的所有字母转成大写字母</td></tr><tr><td><code>LOWER(s)</code> <code>LCASE(s)</code></td><td>将字符串 s 的所有字母转成小写字母</td></tr><tr><td><code>LEFT(str,n)</code></td><td>返回字符串 str 最左边的 n 个字符</td></tr><tr><td><code>RIGHT(str,n)</code></td><td>返回字符串 str 最右边的 n 个字符</td></tr><tr><td><code>LPAD(str,len,pad)</code></td><td>用字符串 pad 对 str 最左边进行填充，直到 str 的长度为 len 个字符</td></tr><tr><td><code>RPAD(str,len,pad)</code></td><td>用字符串 pad 对 str 最右边进行填充，直到 str 的长度为 len 个字符</td></tr><tr><td><code>LTRIM(s)</code></td><td>去掉字符串 s 左侧的空格</td></tr><tr><td><code>RTRIM(s)</code></td><td>去掉字符串 s 右侧的空格</td></tr><tr><td><code>TRIM(s)</code></td><td>去掉字符串 s 开始与结尾的空格</td></tr><tr><td><code>TRIM(s1 FROM s)</code></td><td>去掉字符串 s 开始与结尾的 s</td></tr><tr><td><code>TRIM(LEADING s FROM s)</code></td><td>去掉字符串 s 开始处的 s</td></tr><tr><td><code>TRIM(TRAILING s FROM s)</code></td><td>去掉字符串 s 结尾处的 s</td></tr><tr><td><code>REPEAT(str,n)</code></td><td>返回 str 重复 n 次的结果</td></tr><tr><td><code>SPACE(n)</code></td><td>返回 n 个空格</td></tr><tr><td><code>STRCMP(s1,s2)</code></td><td>比较字符串 s1, s2 的 ASCII 码值的大小</td></tr><tr><td><code>SUBSTR(s,index,len)</code></td><td>返回从字符串 s 的 index 位置其 len 个字符，作用与 SUBSTRING(s,n,len)、MID(s,n,len)相同</td></tr><tr><td><code>LOCATE(substr,str)</code></td><td>返回字符串 substr 在字符串 str 中首次出现的位置，作用于 POSITION(substr IN str)、INSTR(str,substr)相同。未找到，返回 0</td></tr><tr><td><code>ELT(m,s1,s2,…,sn)</code></td><td>返回指定位置的字符串，如果 m=1，则返回 s1，如果 m=2，则返回 s2，如果 m=n，则返回 sn</td></tr><tr><td><code>FIELD(s,s1,s2,…,sn)</code></td><td>返回字符串 s 在字符串列表中第一次出现的位置</td></tr><tr><td><code>FIND_IN_SET(s1,s2)</code></td><td>返回字符串 s1 在字符串 s2 中出现的位置。其中，字符串 s2 是一个以逗号分隔的字符串</td></tr><tr><td><code>REVERSE(s)</code></td><td>返回 s 反转后的字符串</td></tr><tr><td><code>NULLIF(value1,value2)</code></td><td>比较两个字符串，如果 value1 与 value2 相等，则返回 NULL，否则返回 value1</td></tr><tr><td><code>FROM_BASE64(str)</code></td><td>BASE64 解码</td></tr><tr><td><code>TO_BASE64(str)</code></td><td>字符串转 BASE64 编码</td></tr></tbody></table><blockquote><p>注意：MySQL 中，字符串的索引是从 1 开始的</p></blockquote><figure><img src="'+r+`" alt="单行字符串函数示例.png" tabindex="0" loading="lazy"><figcaption>单行字符串函数示例.png</figcaption></figure><h2 id="日期和时间函数" tabindex="-1"><a class="header-anchor" href="#日期和时间函数" aria-hidden="true">#</a> 日期和时间函数</h2><h3 id="获取日期、时间" tabindex="-1"><a class="header-anchor" href="#获取日期、时间" aria-hidden="true">#</a> 获取日期、时间</h3><table><thead><tr><th>函数</th><th>用法</th></tr></thead><tbody><tr><td><code>CURDATE()</code> <code>CURRENT_DATE()</code></td><td>返回当前日期，只包含年、月、日</td></tr><tr><td><code>CURTIME()</code> <code>CURRENT_TIME()</code></td><td>返回当前时间，只包含时、分、秒</td></tr><tr><td><code>NOW()</code> <code>SYSDATE()</code> <code>LOCALTIME()</code><br> <code>LOCALTIMESTAMP()</code> <code>CURRENT_TIMESTAMP()</code></td><td>返回当前系统日期和时间</td></tr><tr><td><code>UTC_DATE()</code></td><td>返回 UTC（世界标准时间）日期</td></tr><tr><td><code>UTC_TIME()</code></td><td>返回 UTC（世界标准时间）时间</td></tr></tbody></table><div class="language-sql" data-ext="sql"><pre class="language-sql"><code>mysql<span class="token operator">&gt;</span> <span class="token keyword">SELECT</span> CURDATE<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">CURRENT_DATE</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> CURTIME<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">CURRENT_TIME</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">FROM</span> DUAL<span class="token punctuation">;</span>
<span class="token operator">+</span><span class="token comment">------------+----------------+-----------+----------------+</span>
<span class="token operator">|</span> CURDATE<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token operator">|</span> <span class="token keyword">CURRENT_DATE</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">|</span> CURTIME<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token keyword">CURRENT_TIME</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">|</span>
<span class="token operator">+</span><span class="token comment">------------+----------------+-----------+----------------+</span>
<span class="token operator">|</span> <span class="token number">2023</span><span class="token operator">-</span><span class="token number">03</span><span class="token operator">-</span><span class="token number">09</span> <span class="token operator">|</span> <span class="token number">2023</span><span class="token operator">-</span><span class="token number">03</span><span class="token operator">-</span><span class="token number">09</span>     <span class="token operator">|</span> <span class="token number">21</span>:<span class="token number">54</span>:<span class="token number">28</span>  <span class="token operator">|</span> <span class="token number">21</span>:<span class="token number">54</span>:<span class="token number">28</span>       <span class="token operator">|</span>
<span class="token operator">+</span><span class="token comment">------------+----------------+-----------+----------------+</span>
<span class="token number">1</span> <span class="token keyword">row</span> <span class="token operator">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span><span class="token number">0.04</span> sec<span class="token punctuation">)</span>

mysql<span class="token operator">&gt;</span><span class="token keyword">SELECT</span> UTC_DATE<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> UTC_TIME<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">FROM</span> DUAL<span class="token punctuation">;</span>
<span class="token operator">+</span><span class="token comment">------------+------------+</span>
<span class="token operator">|</span> UTC_DATE<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">|</span> UTC_TIME<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">|</span>
<span class="token operator">+</span><span class="token comment">------------+------------+</span>
<span class="token operator">|</span> <span class="token number">2023</span><span class="token operator">-</span><span class="token number">03</span><span class="token operator">-</span><span class="token number">09</span> <span class="token operator">|</span> <span class="token number">13</span>:<span class="token number">54</span>:<span class="token number">28</span>   <span class="token operator">|</span>
<span class="token operator">+</span><span class="token comment">------------+------------+</span>
<span class="token number">1</span> <span class="token keyword">row</span> <span class="token operator">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span><span class="token number">0.03</span> sec<span class="token punctuation">)</span>

mysql<span class="token operator">&gt;</span><span class="token keyword">SELECT</span> LOCALTIMESTAMP<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">FROM</span> DUAL<span class="token punctuation">;</span>
<span class="token operator">+</span><span class="token comment">---------------------+</span>
<span class="token operator">|</span> LOCALTIMESTAMP<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token operator">|</span>
<span class="token operator">+</span><span class="token comment">---------------------+</span>
<span class="token operator">|</span> <span class="token number">2023</span><span class="token operator">-</span><span class="token number">03</span><span class="token operator">-</span><span class="token number">09</span> <span class="token number">21</span>:<span class="token number">54</span>:<span class="token number">28</span> <span class="token operator">|</span>
<span class="token operator">+</span><span class="token comment">---------------------+</span>
<span class="token number">1</span> <span class="token keyword">row</span> <span class="token operator">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span><span class="token number">0.04</span> sec<span class="token punctuation">)</span>
</code></pre></div><h3 id="日期与时间戳的转换" tabindex="-1"><a class="header-anchor" href="#日期与时间戳的转换" aria-hidden="true">#</a> 日期与时间戳的转换</h3><table><thead><tr><th>函数</th><th>用法</th></tr></thead><tbody><tr><td><code>UNIX_TIMESTAMP()</code></td><td>以 UNIX 时间戳的形式返回当前时间</td></tr><tr><td><code>UNIX_TIMESTAMP(date)</code></td><td>将时间 date 以 UNIX 时间戳的形式返回</td></tr><tr><td><code>FROM_UNIXTIME(timestamp)</code></td><td>将 UNIX 时间戳的时间转换为普通格式的时间</td></tr></tbody></table><div class="language-sql" data-ext="sql"><pre class="language-sql"><code>mysql<span class="token operator">&gt;</span> <span class="token keyword">SELECT</span> UNIX_TIMESTAMP<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">FROM</span> DUAL<span class="token punctuation">;</span>
<span class="token operator">+</span><span class="token comment">------------------+</span>
<span class="token operator">|</span> UNIX_TIMESTAMP<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">|</span>
<span class="token operator">+</span><span class="token comment">------------------+</span>
<span class="token operator">|</span>       <span class="token number">1678370259</span> <span class="token operator">|</span>
<span class="token operator">+</span><span class="token comment">------------------+</span>
<span class="token number">1</span> <span class="token keyword">row</span> <span class="token operator">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span><span class="token number">0.04</span> sec<span class="token punctuation">)</span>

mysql<span class="token operator">&gt;</span> <span class="token keyword">SELECT</span> UNIX_TIMESTAMP<span class="token punctuation">(</span><span class="token string">&#39;2023-03-09 21:57:39&#39;</span><span class="token punctuation">)</span> <span class="token keyword">FROM</span> DUAL<span class="token punctuation">;</span>
<span class="token operator">+</span><span class="token comment">---------------------------------------+</span>
<span class="token operator">|</span> UNIX_TIMESTAMP<span class="token punctuation">(</span><span class="token string">&#39;2023-03-09 21:57:39&#39;</span><span class="token punctuation">)</span> <span class="token operator">|</span>
<span class="token operator">+</span><span class="token comment">---------------------------------------+</span>
<span class="token operator">|</span>                            <span class="token number">1678370259</span> <span class="token operator">|</span>
<span class="token operator">+</span><span class="token comment">---------------------------------------+</span>
<span class="token number">1</span> <span class="token keyword">row</span> <span class="token operator">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span><span class="token number">0.04</span> sec<span class="token punctuation">)</span>

mysql<span class="token operator">&gt;</span> <span class="token keyword">SELECT</span> FROM_UNIXTIME<span class="token punctuation">(</span><span class="token number">1678370259</span><span class="token punctuation">)</span> <span class="token keyword">FROM</span> DUAL<span class="token punctuation">;</span>
<span class="token operator">+</span><span class="token comment">---------------------------+</span>
<span class="token operator">|</span> FROM_UNIXTIME<span class="token punctuation">(</span><span class="token number">1678370259</span><span class="token punctuation">)</span> <span class="token operator">|</span>
<span class="token operator">+</span><span class="token comment">---------------------------+</span>
<span class="token operator">|</span> <span class="token number">2023</span><span class="token operator">-</span><span class="token number">03</span><span class="token operator">-</span><span class="token number">09</span> <span class="token number">21</span>:<span class="token number">57</span>:<span class="token number">39</span>       <span class="token operator">|</span>
<span class="token operator">+</span><span class="token comment">---------------------------+</span>
<span class="token number">1</span> <span class="token keyword">row</span> <span class="token operator">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span><span class="token number">0.04</span> sec<span class="token punctuation">)</span>
</code></pre></div><h3 id="获取月份、星期、星期数、天数等函数" tabindex="-1"><a class="header-anchor" href="#获取月份、星期、星期数、天数等函数" aria-hidden="true">#</a> 获取月份、星期、星期数、天数等函数</h3><table><thead><tr><th>函数</th><th>用法</th></tr></thead><tbody><tr><td><code>YEAR(date)</code> <code>MONTH(date)</code> <code>DAY(date)</code></td><td>返回具体的日期值</td></tr><tr><td><code>HOUR(time)</code> <code>MINUTE(time)</code> <code>SECOND(time)</code></td><td>返回具体的时间值</td></tr><tr><td><code>MONTHNAME(date)</code></td><td>返回月份：January，…</td></tr><tr><td><code>DAYNAME(date)</code></td><td>返回星期几：MONDAY，TUESDAY…..SUNDAY</td></tr><tr><td><code>WEEKDAY(date)</code></td><td>返回周几，注意，周 1 是 0，周 2 是 1，…周日是 6</td></tr><tr><td><code>QUARTER(date)</code></td><td>返回日期对应的季度，范围为 1 ～ 4</td></tr><tr><td><code>WEEK(date)</code> <code>WEEKOFYEAR(date)</code></td><td>返回一年中的第几周</td></tr><tr><td><code>DAYOFYEAR(date)</code></td><td>返回日期是一年中的第几天</td></tr><tr><td><code>DAYOFMONTH(date)</code></td><td>返回日期位于所在月份的第几天</td></tr><tr><td><code>DAYOFWEEK(date)</code></td><td>返回周几，注意：周日是 1 ，周一是 2 ，…周六是 7</td></tr></tbody></table><h3 id="日期的操作函数" tabindex="-1"><a class="header-anchor" href="#日期的操作函数" aria-hidden="true">#</a> 日期的操作函数</h3><table><thead><tr><th>函数</th><th>用法</th></tr></thead><tbody><tr><td><code>EXTRACT(type FROM date)</code></td><td>返回指定日期中特定的部分，type 指定返回的值</td></tr></tbody></table><figure><img src="`+l+`" alt="type参数说明.png" tabindex="0" loading="lazy"><figcaption>type参数说明.png</figcaption></figure><h3 id="时间和秒钟转换的函数" tabindex="-1"><a class="header-anchor" href="#时间和秒钟转换的函数" aria-hidden="true">#</a> 时间和秒钟转换的函数</h3><table><thead><tr><th>函数</th><th>用法</th></tr></thead><tbody><tr><td><code>TIME_TO_SEC(time)</code></td><td>将 time 转化为秒并返回结果值</td></tr><tr><td><code>SEC_TO_TIME(seconds)</code></td><td>将 seconds 描述转化为包含小时、分钟和秒的时间</td></tr></tbody></table><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token comment"># TIME_TO_SEC(time)-公式：小时 * 3600 + 分钟 * 60 + 秒</span>
<span class="token comment"># 22*3600+23*60+35 = 80615</span>
mysql<span class="token operator">&gt;</span> <span class="token keyword">SELECT</span> TIME_TO_SEC<span class="token punctuation">(</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> SEC_TO_TIME<span class="token punctuation">(</span><span class="token number">80615</span><span class="token punctuation">)</span> <span class="token keyword">FROM</span> DUAL<span class="token punctuation">;</span>
<span class="token operator">+</span><span class="token comment">--------------------+--------------------+</span>
<span class="token operator">|</span> TIME_TO_SEC<span class="token punctuation">(</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">|</span> SEC_TO_TIME<span class="token punctuation">(</span><span class="token number">80615</span><span class="token punctuation">)</span> <span class="token operator">|</span>
<span class="token operator">+</span><span class="token comment">--------------------+--------------------+</span>
<span class="token operator">|</span>              <span class="token number">80615</span> <span class="token operator">|</span> <span class="token number">22</span>:<span class="token number">23</span>:<span class="token number">35</span>           <span class="token operator">|</span>
<span class="token operator">+</span><span class="token comment">--------------------+--------------------+</span>
<span class="token number">1</span> <span class="token keyword">row</span> <span class="token operator">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span><span class="token number">0.04</span> sec<span class="token punctuation">)</span>
</code></pre></div><h3 id="计算日期和时间的函数" tabindex="-1"><a class="header-anchor" href="#计算日期和时间的函数" aria-hidden="true">#</a> 计算日期和时间的函数</h3><table><thead><tr><th>函数</th><th>用法</th></tr></thead><tbody><tr><td><code>DATE_ADD(date, INTERVAL expr type)</code> <code>ADDDATE(date, INTERVAL expr type)</code></td><td>向日期/时间添加指定的时间间隔</td></tr><tr><td><code>DATE_SUB(date, INTERVAL expr type)</code> <code>SUBDATE(date, INTERVAL expr type)</code></td><td>从日期/时间减去指定的时间间隔</td></tr></tbody></table><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span>
  DATE_ADD<span class="token punctuation">(</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">INTERVAL</span> <span class="token number">24</span> <span class="token keyword">MONTH</span> <span class="token punctuation">)</span> <span class="token string">&#39;日期相加24月&#39;</span><span class="token punctuation">,</span>
  DATE_SUB<span class="token punctuation">(</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">INTERVAL</span> <span class="token number">1</span> <span class="token keyword">SECOND</span> <span class="token punctuation">)</span> <span class="token string">&#39;日期相减1秒&#39;</span><span class="token punctuation">,</span>
  ADDDATE<span class="token punctuation">(</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">INTERVAL</span> <span class="token string">&#39;1_1&#39;</span> YEAR_MONTH<span class="token punctuation">)</span> <span class="token string">&#39;日期相加一年一月&#39;</span><span class="token punctuation">,</span>
  SUBDATE<span class="token punctuation">(</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">INTERVAL</span> <span class="token string">&#39;1_1&#39;</span> YEAR_MONTH<span class="token punctuation">)</span> <span class="token string">&#39;日期相减一年一月&#39;</span><span class="token punctuation">;</span>
</code></pre></div><figure><img src="`+k+'" alt="type取值说明.png" tabindex="0" loading="lazy"><figcaption>type取值说明.png</figcaption></figure><table><thead><tr><th>函数</th><th>用法</th></tr></thead><tbody><tr><td><code>ADDTIME(time1,time2)</code></td><td>返回 time1 加上 time2 的时间。当 time2 为一个数字时，代表的是秒，可以为负数</td></tr><tr><td><code>SUBTIME(time1,time2)</code></td><td>返回 time1 减去 time2 后的时间。当 time2 为一个数字时，代表的是秒，可以为负数</td></tr><tr><td><code>DATEDIFF(date1,date2)</code></td><td>返回 date1 - date2 的日期间隔天数</td></tr><tr><td><code>TIMEDIFF(time1, time2)</code></td><td>返回 time1 - time2 的时间间隔</td></tr><tr><td><code>FROM_DAYS(N)</code></td><td>返回从 0000 年 1 月 1 日起，N 天以后的日期</td></tr><tr><td><code>TO_DAYS(date)</code></td><td>返回日期 date 距离 0000 年 1 月 1 日的天数</td></tr><tr><td><code>LAST_DAY(date)</code></td><td>返回 date 所在月份的最后一天的日期</td></tr><tr><td><code>MAKEDATE(year,n)</code></td><td>针对给定年份与所在年份中的天数返回一个日期</td></tr><tr><td><code>MAKETIME(hour,minute,second)</code></td><td>将给定的小时、分钟和秒组合成时间并返回</td></tr><tr><td><code>PERIOD_ADD(time,n)</code></td><td>返回 time 加上 n 后的时间</td></tr></tbody></table><h3 id="日期的格式化与解析" tabindex="-1"><a class="header-anchor" href="#日期的格式化与解析" aria-hidden="true">#</a> 日期的格式化与解析</h3><table><thead><tr><th>函数</th><th>用法</th></tr></thead><tbody><tr><td><code>DATE_FORMAT(date,fmt)</code></td><td>按照字符串 fmt 格式化日期 date 值</td></tr><tr><td><code>TIME_FORMAT(time,fmt)</code></td><td>按照字符串 fmt 格式化时间 time 值</td></tr><tr><td><code>STR_TO_DATE(str,fmt)</code></td><td>按照字符串 fmt 对 str 进行解析，解析为一个日期</td></tr></tbody></table><p><strong>fmt 参数常用的格式符</strong>：</p><table><thead><tr><th>格式</th><th>描述</th><th></th><th>格式</th><th>描述</th></tr></thead><tbody><tr><td><code>%Y</code></td><td>年<code>4位</code></td><td></td><td><code>%y</code></td><td>年<code>2位</code></td></tr><tr><td><code>%M</code></td><td>月名<code>eg:January</code></td><td></td><td><code>%b</code></td><td>月名<code>eg:Jan</code></td></tr><tr><td><code>%m</code></td><td>月<code>01-12</code></td><td></td><td><code>%c</code></td><td>月<code>1-12</code></td></tr><tr><td><code>%D</code></td><td>月的天<code>1st,2nd</code></td><td></td><td><code>%d</code></td><td>月的天<code>01-31</code></td></tr><tr><td><code>%e</code></td><td>月的天<code>1-31</code></td><td></td><td><code>%f</code></td><td>微秒</td></tr><tr><td><code>%H</code></td><td>小时<code>00-23</code></td><td></td><td><code>%k</code></td><td>小时<code>0-23</code></td></tr><tr><td><code>%h</code> <code>%I</code></td><td>小时<code>01-12</code></td><td></td><td><code>%l</code></td><td>小时<code>1-12</code></td></tr><tr><td><code>%i</code></td><td>分钟<code>00-59</code></td><td></td><td><code>%S</code> <code>%s</code></td><td>秒<code>00-59</code></td></tr><tr><td><code>%W</code></td><td>星期名<code>Thursday</code></td><td></td><td><code>%a</code></td><td>星期名<code>Thu</code></td></tr><tr><td><code>%j</code></td><td>年的天<code>001-366</code></td><td></td><td><code>%p</code></td><td><code>AM</code>或<code>PM</code></td></tr></tbody></table><table><thead><tr><th>格式</th><th>描述</th></tr></thead><tbody><tr><td><code>%r</code></td><td>时间，12-小时<code>hh:mm:ss AM 或 PM</code></td></tr><tr><td><code>%T</code></td><td>时间, 24-小时 <code>hh:mm:ss</code></td></tr><tr><td><code>%U</code></td><td>周 <code>01-53</code> 星期日是一周的第一天</td></tr><tr><td><code>%u</code></td><td>周 <code>01-53</code> 星期一是一周的第一天</td></tr><tr><td><code>%w</code></td><td>周的天<code>0 = 星期日, 6 = 星期六</code></td></tr><tr><td><code>%X</code></td><td>年，其中的<mark>星期日</mark>是周的第一天，4 位，与 %V 使用</td></tr><tr><td><code>%V</code></td><td>周 <code>01-53</code> <mark>星期日</mark>是周的第一天，与 %X 使用</td></tr><tr><td><code>%x</code></td><td>年，其中的<mark>星期一</mark>是周的第一天，4 位，与 %v 使用</td></tr><tr><td><code>%v</code></td><td>周 <code>01-53</code> <mark>星期一</mark>是周的第一天，与 %x 使用</td></tr></tbody></table><table><thead><tr><th>函数</th><th>用法</th></tr></thead><tbody><tr><td><code>GET_FORMAT(date_type,format_type)</code></td><td>返回日期字符串的显示格式</td></tr></tbody></table><figure><img src="'+u+`" alt="参数说明.png" tabindex="0" loading="lazy"><figcaption>参数说明.png</figcaption></figure><h2 id="流程控制函数" tabindex="-1"><a class="header-anchor" href="#流程控制函数" aria-hidden="true">#</a> 流程控制函数</h2><table><thead><tr><th>函数</th><th>用法</th></tr></thead><tbody><tr><td><code>IF(value,value1,value2)</code></td><td>如果 value 的值为 TRUE，返回 value1，否则返回 value</td></tr><tr><td><code>IFNULL(value1, value2)</code></td><td>如果 value1 不为 NULL，返回 value1，否则返回 value</td></tr><tr><td><code>CASE WHEN 条件1 THEN 结果1 WHEN 条件2 THEN 结果 2 … [ELSE result n] END</code></td><td>相当于 Java 的 if…else if…else…</td></tr><tr><td><code>CASE expr WHEN 常量值1 THEN 值1 WHEN 常量值1 THEN 值1 … [ELSE 值n] END</code></td><td>相当于 Java 的 switch…case…</td></tr></tbody></table><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token keyword">IF</span><span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">&#39;正确&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;错误&#39;</span> <span class="token punctuation">)</span><span class="token punctuation">,</span>IFNULL<span class="token punctuation">(</span><span class="token boolean">NULL</span><span class="token punctuation">,</span> <span class="token string">&#39;Hello Word&#39;</span> <span class="token punctuation">)</span> <span class="token keyword">FROM</span> DUAL<span class="token punctuation">;</span>
<span class="token operator">&gt;</span> <span class="token operator">|</span> 正确 <span class="token operator">|</span> Hello Word <span class="token operator">|</span>

<span class="token keyword">CASE</span>
    <span class="token keyword">WHEN</span> condition <span class="token keyword">THEN</span> result
    <span class="token punctuation">[</span><span class="token keyword">WHEN</span> condition <span class="token keyword">THEN</span> result <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">]</span>
    <span class="token punctuation">[</span><span class="token keyword">ELSE</span> result<span class="token punctuation">]</span>
<span class="token keyword">END</span>

<span class="token keyword">CASE</span> <span class="token keyword">value</span>
    <span class="token keyword">WHEN</span> compare_value <span class="token keyword">THEN</span> result
    <span class="token punctuation">[</span><span class="token keyword">WHEN</span> compare_value <span class="token keyword">THEN</span> result <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">]</span>
    <span class="token punctuation">[</span><span class="token keyword">ELSE</span> result<span class="token punctuation">]</span>
<span class="token keyword">END</span>
</code></pre></div><h2 id="加密与解密函数" tabindex="-1"><a class="header-anchor" href="#加密与解密函数" aria-hidden="true">#</a> 加密与解密函数</h2><table><thead><tr><th>函数</th><th>用法</th></tr></thead><tbody><tr><td><code>PASSWORD(str)</code></td><td>返回字符串 str 的加密版本， 41 位长的字符串。<mark>加密结果不可逆</mark>，常用于用户的密码加密 [MySQL 8.0 中启用]</td></tr><tr><td><code>MD5(str)</code></td><td>返回字符串 str 的 md5 加密后的值，也是一种加密方式。若参数为 NULL，则会返回 NULL，<mark>加密结果不可逆</mark></td></tr><tr><td><code>SHA(str)</code></td><td>从原明文密码 str 计算并返回加密后的密码字符串，当参数为 NULL 时，返回 NULL。<mark>不可逆，SHA 加密算法比 MD5 更加安全</mark></td></tr><tr><td><code>ENCODE(value,password_seed)</code></td><td>返回使用 password_seed 作为加密密码加密 value [MySQL 8.0 中启用]</td></tr><tr><td><code>DECODE(value,password_seed)</code></td><td>返回使用 password_seed 作为加密密码解密 value [MySQL 8.0 中启用]</td></tr></tbody></table><h2 id="mysql-信息函数" tabindex="-1"><a class="header-anchor" href="#mysql-信息函数" aria-hidden="true">#</a> MySQL 信息函数</h2><table><thead><tr><th>函数</th><th>用法</th></tr></thead><tbody><tr><td><code>VERSION()</code></td><td>返回当前 MySQL 的版本号</td></tr><tr><td><code>CONNECTION_ID()</code></td><td>返回当前连接的唯一连接 ID</td></tr><tr><td><code>DATABASE()，SCHEMA()</code></td><td>返回 MySQL 命令行当前所在的数据库</td></tr><tr><td><code>USER()、CURRENT_USER()、SYSTEM_USER()、SESSION_USER()</code></td><td>返回当前连接 MySQL 的用户名，返回结果格式为&quot;主机名@用户名&quot;</td></tr><tr><td><code>CHARSET(value)</code></td><td>返回字符串 value 自变量的字符集</td></tr><tr><td><code>COLLATION(value)</code></td><td>返回字符串 value 的比较规则</td></tr></tbody></table><h2 id="其它函数" tabindex="-1"><a class="header-anchor" href="#其它函数" aria-hidden="true">#</a> 其它函数</h2><table><thead><tr><th>函数</th><th>用法</th></tr></thead><tbody><tr><td><code>FORMAT(value,n)</code></td><td>返回对数字 value 进行格式化后的结果数据。n 表示四舍五入后保留到小数点后 n 位</td></tr><tr><td><code>CONV(value,from,to)</code></td><td>将 value 的值进行不同进制之间的转换</td></tr><tr><td><code>INET_ATON(ipvalue)</code></td><td>将以点分隔的 IP 地址转化为一个数字</td></tr><tr><td><code>INET_NTOA(value)</code></td><td>将数字形式的 IP 地址转化为以点分隔的 IP 地址</td></tr><tr><td><code>BENCHMARK(n,expr)</code></td><td>将表达式 expr 重复执行 n 次。用于测试 MySQL 处理 expr 表达式所耗费的时间</td></tr><tr><td><code>CONVERT(value USING char_code)</code></td><td>将 value 所使用的字符编码修改为 char_code</td></tr></tbody></table><h2 id="附-函数参考" tabindex="-1"><a class="header-anchor" href="#附-函数参考" aria-hidden="true">#</a> 附 函数参考</h2>`,46),y=n("strong",null,"MySQL 更多函数参考",-1),A={href:"https://www.sjkjc.com/mysql-ref/",target:"_blank",rel:"noopener noreferrer"};function N(R,I){const t=p("ExternalLinkIcon");return c(),d("div",null,[m,n("p",null,[s("三角函数："),n("a",h,[s("https://baike.baidu.com/item/三角函数公式/4374733"),a(t)]),E,s(" 反三角函数："),n("a",b,[s("https://baike.baidu.com/item/反三角函数/7004029"),a(t)])]),T,n("p",null,[y,s("："),n("a",A,[s("https://www.sjkjc.com/mysql-ref/"),a(t)])])])}const _=o(i,[["render",N],["__file","one_line_function.html.vue"]]);export{_ as default};
