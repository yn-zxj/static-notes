import{_ as n,o as e,c as t,a as o,g as s,k as a}from"./app-bXqFKZAm.js";const c={},i=o(`<h2 id="什么是容器数据卷" tabindex="-1"><a class="header-anchor" href="#什么是容器数据卷" aria-hidden="true">#</a> 什么是容器数据卷</h2><p>  如果数据都在容器中，假如容器删除数据就会丢失，这显然不是我们希望的，所以需要将数据持久化到本地。此外假如有一个配置，在多个容器中使用到了，假如某个地方需要修改，不使用数据卷就需要一个一个容器的去修改，期间可能还会涉及镜像重新构建与部署，使用数据卷就可以很好的解决这个问题。</p><p>  卷的本质是文件或者目录，存在一个或者多个容器中，有 Docker 挂载到容器，但不属于联合文件系统。卷的概念不仅解决了数据持久化的问题，还解决了容器间共享数据的问题。</p><div class="hint-container tip"><p class="hint-container-title">总结</p><p>① 数据的持久化，当容器重启后保证数据不丢失；<br> ② 如果数据存储于镜像中，主机上的其它进程不方便访问这些数据，数据卷解决了容器间数据共享问题。</p></div><p><strong>容器卷有哪些特点</strong>：<br>  ① 数据卷可在容器之间共享或重用数据<br>  ② 数据卷中的更改不会包含在镜像的更新中<br>  ③ 卷中的更改可以直接生效<br>  ④ 数据卷的生命周期一直持续到没有容器使用它为止</p><h2 id="卷的操作" tabindex="-1"><a class="header-anchor" href="#卷的操作" aria-hidden="true">#</a> 卷的操作</h2><h3 id="挂载数据卷" tabindex="-1"><a class="header-anchor" href="#挂载数据卷" aria-hidden="true">#</a> 挂载数据卷</h3><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> run <span class="token parameter variable">-d</span> <span class="token parameter variable">--name</span> memos <span class="token parameter variable">-p</span> <span class="token number">5230</span>:5230 <span class="token punctuation">\\</span>
 <span class="token parameter variable">-v</span> /opt/apps/memos:/var/opt/memos neosmemo/memos:stable
</code></pre></div><p>查看挂载是否成功：<br><code>docker inspect container_id</code></p>`,9),r=s("div",{class:"language-bash","data-ext":"sh"},[s("pre",{shell:"",":no-line-numbers":"",class:"language-bash"},[s("code",null,[s("span",{class:"token punctuation"},"{"),a(`
    `),s("span",{class:"token string"},'"Mounts"'),s("span",{class:"token builtin class-name"},":"),a(),s("span",{class:"token punctuation"},"["),a(`
        `),s("span",{class:"token punctuation"},"{"),a(`
            `),s("span",{class:"token string"},'"Type"'),s("span",{class:"token builtin class-name"},":"),a(),s("span",{class:"token string"},'"bind"'),a(`,
            `),s("span",{class:"token string"},'"Source"'),s("span",{class:"token builtin class-name"},":"),a(),s("span",{class:"token string"},'"/opt/apps/memos"'),a(", "),s("span",{class:"token comment"},"# 宿主机目录"),a(`
            `),s("span",{class:"token string"},'"Destination"'),s("span",{class:"token builtin class-name"},":"),a(),s("span",{class:"token string"},'"/var/opt/memos"'),a(", "),s("span",{class:"token comment"},"# 容器内的目录"),a(`
            `),s("span",{class:"token string"},'"Mode"'),s("span",{class:"token builtin class-name"},":"),a(),s("span",{class:"token string"},'"rw"'),a(`,
            `),s("span",{class:"token string"},'"RW"'),s("span",{class:"token builtin class-name"},":"),a(` true,
            `),s("span",{class:"token string"},'"Propagation"'),s("span",{class:"token builtin class-name"},":"),a(),s("span",{class:"token string"},'"rprivate"'),a(`
        `),s("span",{class:"token punctuation"},"}"),a(`
    `),s("span",{class:"token punctuation"},"]"),a(`
`),s("span",{class:"token punctuation"},"}"),a(`
`)])]),s("div",{class:"highlight-lines"},[s("br"),s("br"),s("br"),s("br"),s("div",{class:"highlight-line"}," "),s("div",{class:"highlight-line"}," "),s("br"),s("br"),s("br"),s("br"),s("br"),s("br")])],-1),l=s("h3",{id:"具名挂载",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#具名挂载","aria-hidden":"true"},"#"),a(" 具名挂载")],-1),p=s("h3",{id:"匿名挂载",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#匿名挂载","aria-hidden":"true"},"#"),a(" 匿名挂载")],-1),d=[i,r,l,p];function h(u,b){return e(),t("div",null,d)}const m=n(c,[["render",h],["__file","data_volume.html.vue"]]);export{m as default};
