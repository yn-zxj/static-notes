import{_ as a,j as s,o as r,c,f as e,i as o,g as n,a as i}from"./app-cb8d9fe0.js";const p="/assets/code-mode-f0cf23b8.png",d="/assets/realization-process-0ff3c6ca.png",f={},l=e("h2",{id:"官网",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#官网","aria-hidden":"true"},"#"),o(" 官网")],-1),h={href:"https://vuejs.org",target:"_blank",rel:"noopener noreferrer"},u=e("code",null,"https://vuejs.org/",-1),g={href:"https://cn.vuejs.org/",target:"_blank",rel:"noopener noreferrer"},_=e("code",null,"https://cn.vuejs.org/",-1),v=i('<h2 id="介绍与描述" tabindex="-1"><a class="header-anchor" href="#介绍与描述" aria-hidden="true">#</a> 介绍与描述</h2><p>（1）Vue 是一套用来动态<strong>构建用户界面</strong><sup class="footnote-ref"><a href="#footnote1">[1]</a><a class="footnote-anchor" id="footnote-ref1"></a></sup>的<strong>渐进式</strong><sup class="footnote-ref"><a href="#footnote2">[2]</a><a class="footnote-anchor" id="footnote-ref2"></a></sup><code>JavaScript</code>框架；</p><p>（2）作者：尤雨溪</p><h2 id="vue-的特点" tabindex="-1"><a class="header-anchor" href="#vue-的特点" aria-hidden="true">#</a> Vue 的特点</h2><p>（1）遵循<code>MVVM</code>模式；</p><p>（2）编码简洁，体积小，运行效率高，适合移动/PC 端开发；</p><p>（3）它本身只关注 UI，可以引入其他第三方库开发项目；</p><p>（4）采用<strong>组件化</strong>模式，提高代码复用率，且让代码便于维护；</p><p>（5）<strong>声明式</strong>编码，让编码人员无需直接操作<code>DOM</code>，提升开发效率；</p><figure><img src="'+p+'" alt="编码模式.png" tabindex="0" loading="lazy"><figcaption>编码模式.png</figcaption></figure><div class="hint-container tip"><p class="hint-container-title">使用虚拟 DOM 和 Diff 算法，尽量复用 DOM 节点</p><figure><img src="'+d+'" alt="实现过程.png" tabindex="0" loading="lazy"><figcaption>实现过程.png</figcaption></figure></div><h2 id="与其他-js-框架的关联" tabindex="-1"><a class="header-anchor" href="#与其他-js-框架的关联" aria-hidden="true">#</a> 与其他 JS 框架的关联</h2><p>（1）借鉴 Angular 的<strong>模板</strong>和<strong>数据绑定</strong>技术</p><p>（2）借鉴 React 的<strong>组件化</strong>和<strong>虚拟 DOM</strong> 技术</p><h2 id="vue-周边库" tabindex="-1"><a class="header-anchor" href="#vue-周边库" aria-hidden="true">#</a> Vue 周边库</h2><p>（1）vue-cli：vue 脚手架</p><p>（2）vue-router：路由</p><p>（3）vuex：状态管理</p><p>（4）element-ui：基于 vue 的 UI 组件库(PC 端)</p><p>（5）......</p><hr class="footnotes-sep"><section class="footnotes"><ol class="footnotes-list"><li id="footnote1" class="footnote-item"><p>把数据通过某种办法变成用户界面 <a href="#footnote-ref1" class="footnote-backref">↩︎</a></p></li><li id="footnote2" class="footnote-item"><p><code>Vue</code>可以自底而上逐层的应用，简单的应用只需要一个轻量小巧的核心库，复杂应用可以引入各式各样的<code>Vue</code>插件 <a href="#footnote-ref2" class="footnote-backref">↩︎</a></p></li></ol></section>',22);function m(x,b){const t=s("ExternalLinkIcon");return r(),c("div",null,[l,e("p",null,[o("英文："),e("a",h,[u,n(t)])]),e("p",null,[o("中文："),e("a",g,[_,n(t)])]),v])}const k=a(f,[["render",m],["__file","intro.html.vue"]]);export{k as default};
