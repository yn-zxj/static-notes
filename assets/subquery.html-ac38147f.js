import{_ as s,o as a,c as n,a as p}from"./app-a047659d.js";const e={},t=p(`<h2 id="子查询" tabindex="-1"><a class="header-anchor" href="#子查询" aria-hidden="true">#</a> 子查询</h2><h3 id="子查询的基本使用" tabindex="-1"><a class="header-anchor" href="#子查询的基本使用" aria-hidden="true">#</a> 子查询的基本使用</h3><p><strong>基本语法结构</strong>:</p><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> select_list
<span class="token keyword">FROM</span> <span class="token keyword">table</span>
<span class="token keyword">WHERE</span> expr operator <span class="token punctuation">(</span><span class="token keyword">SELECT</span> select_list <span class="token keyword">FROM</span> <span class="token keyword">table</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><blockquote><p>子查询(内查询)在主查询之前一次执行完成<br> 子查询的结果被主查询(外查询)使用</p></blockquote><div class="hint-container warning"><p class="hint-container-title">注意</p><p>(1) 子查询要包含在括号内<br> (2) 将子查询放在比较条件的右侧<br> (3) 单行操作符对应单行子查询，多行操作符对应多行子查询</p></div><h3 id="子查询的分类" tabindex="-1"><a class="header-anchor" href="#子查询的分类" aria-hidden="true">#</a> 子查询的分类</h3><p><strong>分类一</strong>：<br> 按内查询的<mark>结果返回一条还是多条记录</mark>，将子查询分为<mark>单行子查询</mark>、<mark>多行子查询</mark>。</p><p><strong>分类二</strong>：<br> 按内查询<mark>是否被执行多次</mark>，将子查询划分为<mark>相关(或关联)子查询</mark>和<mark>不相关(或非关联)子查询</mark>。</p><h2 id="单行子查询" tabindex="-1"><a class="header-anchor" href="#单行子查询" aria-hidden="true">#</a> 单行子查询</h2><div class="hint-container tip"><p class="hint-container-title">提示</p><p>单行比较操作符：<code>=、&gt;、&gt;=、&lt;、&lt;=、&lt;&gt;</code></p></div><p><strong>查询示例</strong>：</p><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token comment"># 题目一：查询工资大于149号员工工资的员工信息</span>
<span class="token keyword">SELECT</span> <span class="token operator">*</span>
<span class="token keyword">FROM</span> employees
<span class="token keyword">WHERE</span> salary <span class="token operator">&gt;</span> <span class="token punctuation">(</span><span class="token keyword">SELECT</span> salary <span class="token keyword">FROM</span> employees <span class="token keyword">WHERE</span> employee_id <span class="token operator">=</span> <span class="token string">&#39;149&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment"># 题目二：返回job_id与员工141号员工相同，salary比143号员工多的员工姓名、job_id和工资</span>
<span class="token keyword">SELECT</span> last_name<span class="token punctuation">,</span> job_id<span class="token punctuation">,</span> salary
<span class="token keyword">FROM</span> employees
<span class="token keyword">WHERE</span> job_id <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">SELECT</span> job_id <span class="token keyword">FROM</span> employees <span class="token keyword">WHERE</span> employee_id <span class="token operator">=</span> <span class="token string">&#39;141&#39;</span><span class="token punctuation">)</span>
<span class="token operator">AND</span> salary <span class="token operator">&gt;</span> <span class="token punctuation">(</span><span class="token keyword">SELECT</span> salary <span class="token keyword">FROM</span> employees <span class="token keyword">WHERE</span> employee_id <span class="token operator">=</span> <span class="token string">&#39;143&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment"># 题目三：返回公司工资最少的员工的员工的last_name、job_id和salary</span>
<span class="token keyword">SELECT</span> last_name<span class="token punctuation">,</span> job_id<span class="token punctuation">,</span> salary
<span class="token keyword">FROM</span> employees
<span class="token keyword">WHERE</span> salary <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">SELECT</span> <span class="token function">MIN</span><span class="token punctuation">(</span>salary<span class="token punctuation">)</span> <span class="token keyword">FROM</span> employees<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="highlight-lines"><br><br><br><div class="highlight-line"> </div><br><br><br><br><div class="highlight-line"> </div><div class="highlight-line"> </div><br><br><br><br><div class="highlight-line"> </div></div></div><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token comment">/*
题目四：查询与141号或174号员工的manager_id和
department_id相同的其他员工的employee_id、manager_id、department_id
*/</span>

<span class="token comment"># 不成对比较</span>
<span class="token keyword">SELECT</span> employee_id<span class="token punctuation">,</span> manager_id<span class="token punctuation">,</span> department_id
<span class="token keyword">FROM</span> employees
<span class="token keyword">WHERE</span> manager_id <span class="token operator">IN</span> <span class="token punctuation">(</span><span class="token keyword">SELECT</span> manager_id <span class="token keyword">FROM</span> employees <span class="token keyword">WHERE</span> employee_id <span class="token operator">IN</span> <span class="token punctuation">(</span><span class="token number">141</span><span class="token punctuation">,</span> <span class="token number">174</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token operator">AND</span> department_id <span class="token operator">IN</span> <span class="token punctuation">(</span><span class="token keyword">SELECT</span> department_id <span class="token keyword">FROM</span> employees <span class="token keyword">WHERE</span> employee_id <span class="token operator">IN</span> <span class="token punctuation">(</span><span class="token number">141</span><span class="token punctuation">,</span> <span class="token number">174</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token operator">AND</span> employee_id <span class="token operator">NOT</span> <span class="token operator">IN</span> <span class="token punctuation">(</span><span class="token number">141</span><span class="token punctuation">,</span> <span class="token number">171</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment"># 成对比较</span>
<span class="token keyword">SELECT</span> employee_id<span class="token punctuation">,</span> manager_id<span class="token punctuation">,</span> department_id
<span class="token keyword">FROM</span> employees
<span class="token keyword">WHERE</span> <span class="token punctuation">(</span>manager_id<span class="token punctuation">,</span> department_id<span class="token punctuation">)</span> <span class="token operator">IN</span> <span class="token punctuation">(</span><span class="token keyword">SELECT</span> manager_id<span class="token punctuation">,</span>department_id <span class="token keyword">FROM</span> employees <span class="token keyword">WHERE</span> employee_id <span class="token operator">IN</span> <span class="token punctuation">(</span><span class="token number">141</span><span class="token punctuation">,</span> <span class="token number">174</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token operator">AND</span> employee_id <span class="token operator">NOT</span> <span class="token operator">IN</span> <span class="token punctuation">(</span><span class="token number">141</span><span class="token punctuation">,</span> <span class="token number">171</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="highlight-lines"><br><br><br><br><br><br><br><br><div class="highlight-line"> </div><div class="highlight-line"> </div><br><br><br><br><br><div class="highlight-line"> </div><br></div></div><h3 id="having-中的子查询" tabindex="-1"><a class="header-anchor" href="#having-中的子查询" aria-hidden="true">#</a> HAVING 中的子查询</h3><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token comment"># 查询最低工资大于50号部门最低工资的部门id和其最低工资</span>
<span class="token keyword">SELECT</span> department_id<span class="token punctuation">,</span> <span class="token function">MIN</span><span class="token punctuation">(</span>salary<span class="token punctuation">)</span>
<span class="token keyword">FROM</span> employees
<span class="token keyword">GROUP</span> <span class="token keyword">BY</span> department_id
<span class="token keyword">HAVING</span> <span class="token function">MIN</span><span class="token punctuation">(</span>salary<span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token punctuation">(</span><span class="token keyword">SELECT</span> <span class="token function">MIN</span><span class="token punctuation">(</span>salary<span class="token punctuation">)</span> <span class="token keyword">FROM</span> employees <span class="token keyword">WHERE</span> department_id <span class="token operator">=</span> <span class="token string">&#39;50&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="highlight-lines"><br><br><br><br><div class="highlight-line"> </div></div></div><h3 id="case-中的子查询" tabindex="-1"><a class="header-anchor" href="#case-中的子查询" aria-hidden="true">#</a> CASE 中的子查询</h3><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token comment">/*
显示员工的employee_id,last_name和grade
salary &gt;= 10000 grade = &#39;A&#39;
5000 &gt;= salary &gt; 10000 grade = &#39;B&#39;
salary &lt; 5000 grade = &#39;C&#39;
*/</span>
<span class="token keyword">SELECT</span>
  employee_id<span class="token punctuation">,</span>
  last_name<span class="token punctuation">,</span>
  <span class="token keyword">CASE</span>
      <span class="token keyword">WHEN</span> salary <span class="token operator">&gt;=</span> <span class="token number">10000</span> <span class="token keyword">THEN</span> <span class="token string">&#39;A&#39;</span>
      <span class="token keyword">WHEN</span> salary <span class="token operator">&gt;=</span> <span class="token number">5000</span> <span class="token operator">AND</span> salary <span class="token operator">&lt;</span> <span class="token number">10000</span> <span class="token keyword">THEN</span> <span class="token string">&#39;B&#39;</span>
      <span class="token keyword">WHEN</span> salary <span class="token operator">&lt;</span> <span class="token number">5000</span> <span class="token keyword">THEN</span> <span class="token string">&#39;C&#39;</span>
  <span class="token keyword">END</span> <span class="token string">&#39;grade&#39;</span>
<span class="token keyword">FROM</span>
  employees<span class="token punctuation">;</span>
</code></pre></div><h3 id="子查询中的空值问题" tabindex="-1"><a class="header-anchor" href="#子查询中的空值问题" aria-hidden="true">#</a> 子查询中的空值问题</h3><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token comment"># 查询工资大于149号员工工资的员工信息</span>
<span class="token keyword">SELECT</span> <span class="token operator">*</span>
<span class="token keyword">FROM</span> employees
<span class="token keyword">WHERE</span> salary <span class="token operator">&gt;</span> <span class="token punctuation">(</span><span class="token keyword">SELECT</span> salary <span class="token keyword">FROM</span> employees <span class="token keyword">WHERE</span> employee_id <span class="token operator">=</span> <span class="token string">&#39;666&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><blockquote><p>由于没有员工的员工编号为 666，所以返回的记录数为 0（子查询不返回任何行）</p></blockquote><h3 id="非法使用子查询" tabindex="-1"><a class="header-anchor" href="#非法使用子查询" aria-hidden="true">#</a> 非法使用子查询</h3><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> employee_id<span class="token punctuation">,</span> last_name
<span class="token keyword">FROM</span> employees
<span class="token keyword">WHERE</span> salary <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">SELECT</span> <span class="token function">MIN</span><span class="token punctuation">(</span>salary<span class="token punctuation">)</span> <span class="token keyword">FROM</span> employees <span class="token keyword">GROUP</span> <span class="token keyword">BY</span> department_id<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><blockquote><p>子查询返回多行，但是比较符确是单行比较符，此时 salary 无法决策与子查询返回的那个值相等，故错误</p></blockquote><h2 id="多行子查询" tabindex="-1"><a class="header-anchor" href="#多行子查询" aria-hidden="true">#</a> 多行子查询</h2><h3 id="多行子查询操作符" tabindex="-1"><a class="header-anchor" href="#多行子查询操作符" aria-hidden="true">#</a> 多行子查询操作符</h3><p>多行子查询也称集合比较子查询，内查询返回多行，使用多行比较操作符。</p><table><thead><tr><th>操作符</th><th>含义</th></tr></thead><tbody><tr><td><code>IN</code></td><td>等于列表中的<mark>任意一个</mark></td></tr><tr><td><code>ANY</code></td><td>需要和单行比较操作符一起使用，和子查询返回的<mark>某一个</mark>值比较</td></tr><tr><td><code>ALL</code></td><td>需要和单行比较操作符一起使用，和子查询返回的<mark>所有</mark>值比较</td></tr><tr><td><code>SOME</code></td><td>实际上是 ANY 的别名，作用相同，一般常使用 ANY</td></tr></tbody></table><p><strong>查询示例</strong>：</p><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token comment"># 题目一：查询入职日期比10部门任意一个员工晚的员工姓名、入职日期，不包括10部门员工</span>
<span class="token keyword">SELECT</span> last_name<span class="token punctuation">,</span> hire_date
<span class="token keyword">FROM</span> employees
<span class="token keyword">WHERE</span> hire_date <span class="token operator">&gt;</span><span class="token keyword">ANY</span> <span class="token punctuation">(</span><span class="token keyword">SELECT</span> hire_date <span class="token keyword">FROM</span> employees <span class="token keyword">WHERE</span> department_id <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">)</span>
<span class="token operator">AND</span> department_id <span class="token operator">&lt;&gt;</span> <span class="token number">10</span><span class="token punctuation">;</span>

<span class="token comment"># 题目二：查询入职日期比20部门所有员工晚的员工姓名、入职日期，不包括10部门员工</span>
<span class="token keyword">SELECT</span> last_name<span class="token punctuation">,</span> hire_date
<span class="token keyword">FROM</span> employees
<span class="token keyword">WHERE</span> hire_date <span class="token operator">&gt;</span><span class="token keyword">ALL</span> <span class="token punctuation">(</span><span class="token keyword">SELECT</span> hire_date <span class="token keyword">FROM</span> employees <span class="token keyword">WHERE</span> department_id <span class="token operator">=</span> <span class="token number">20</span><span class="token punctuation">)</span>
<span class="token operator">AND</span> department_id <span class="token operator">&lt;&gt;</span> <span class="token number">10</span><span class="token punctuation">;</span>

<span class="token comment"># 题目三：查询职位和50部门任意一个员工职位相同的员工姓名，职位，不包括20部门员工</span>
<span class="token keyword">SELECT</span> last_name<span class="token punctuation">,</span> job_id
<span class="token keyword">FROM</span> employees
<span class="token keyword">WHERE</span> job_id <span class="token operator">=</span><span class="token keyword">ANY</span> <span class="token punctuation">(</span><span class="token keyword">SELECT</span> job_id <span class="token keyword">FROM</span> employees <span class="token keyword">WHERE</span> department_id <span class="token operator">=</span> <span class="token number">50</span><span class="token punctuation">)</span>
<span class="token operator">AND</span> department_id <span class="token operator">&lt;&gt;</span> <span class="token number">20</span><span class="token punctuation">;</span>

<span class="token comment"># 或</span>
<span class="token keyword">SELECT</span> last_name<span class="token punctuation">,</span> job_id
<span class="token keyword">FROM</span> employees
<span class="token keyword">WHERE</span> job_id <span class="token operator">IN</span> <span class="token punctuation">(</span><span class="token keyword">SELECT</span> job_id <span class="token keyword">FROM</span> employees <span class="token keyword">WHERE</span> department_id <span class="token operator">=</span> <span class="token number">50</span><span class="token punctuation">)</span>
<span class="token operator">AND</span> department_id <span class="token operator">&lt;&gt;</span> <span class="token number">20</span><span class="token punctuation">;</span>

<span class="token comment"># 题目四：返回其它job_id中比job_id为&#39;IT_PROG&#39;部门任一工资低的员工的员工号、姓名、job_id以及salary</span>
<span class="token keyword">SELECT</span> employee_id<span class="token punctuation">,</span> last_name<span class="token punctuation">,</span> job_id<span class="token punctuation">,</span> salary
<span class="token keyword">FROM</span> employees
<span class="token keyword">WHERE</span> salary <span class="token operator">&lt;</span><span class="token keyword">ANY</span> <span class="token punctuation">(</span><span class="token keyword">SELECT</span> salary <span class="token keyword">FROM</span> employees <span class="token keyword">WHERE</span> job_id <span class="token operator">=</span> <span class="token string">&#39;IT_PROG&#39;</span><span class="token punctuation">)</span>
<span class="token operator">AND</span> job_id <span class="token operator">&lt;&gt;</span> <span class="token string">&#39;IT_PROG&#39;</span><span class="token punctuation">;</span>

<span class="token comment"># 题目五：返回其它job_id中比job_id为&#39;IT_PROG&#39;部门所有工资都低的员工的员工号、姓名、job_id以及salary</span>
<span class="token keyword">SELECT</span> employee_id<span class="token punctuation">,</span> last_name<span class="token punctuation">,</span> job_id<span class="token punctuation">,</span> salary
<span class="token keyword">FROM</span> employees
<span class="token keyword">WHERE</span> salary <span class="token operator">&lt;</span><span class="token keyword">ALL</span> <span class="token punctuation">(</span><span class="token keyword">SELECT</span> salary <span class="token keyword">FROM</span> employees <span class="token keyword">WHERE</span> job_id <span class="token operator">=</span> <span class="token string">&#39;IT_PROG&#39;</span><span class="token punctuation">)</span>
<span class="token operator">AND</span> job_id <span class="token operator">&lt;&gt;</span> <span class="token string">&#39;IT_PROG&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="highlight-lines"><br><br><br><div class="highlight-line"> </div><br><br><br><br><br><div class="highlight-line"> </div><br><br><br><br><br><div class="highlight-line"> </div><br><br><br><br><br><div class="highlight-line"> </div><br><br><br><br><br><div class="highlight-line"> </div><br><br><br><br><br><div class="highlight-line"> </div><br></div></div><h3 id="空值问题" tabindex="-1"><a class="header-anchor" href="#空值问题" aria-hidden="true">#</a> 空值问题</h3><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token comment"># 内查询有NULL值</span>
<span class="token keyword">SELECT</span> employee_id<span class="token punctuation">,</span> last_name<span class="token punctuation">,</span> job_id<span class="token punctuation">,</span> salary<span class="token punctuation">,</span> employee_id
<span class="token keyword">FROM</span> employees
<span class="token keyword">WHERE</span> employee_id <span class="token operator">NOT</span> <span class="token operator">IN</span> <span class="token punctuation">(</span><span class="token keyword">SELECT</span> manager_id <span class="token keyword">FROM</span> employees<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h2 id="相关子查询" tabindex="-1"><a class="header-anchor" href="#相关子查询" aria-hidden="true">#</a> 相关子查询</h2><h3 id="基本使用" tabindex="-1"><a class="header-anchor" href="#基本使用" aria-hidden="true">#</a> 基本使用</h3><p>  如果子查询的执行依赖于外部查询，通常情况下都是因为子查询中的表用到了外部的表，并进行了条件关联，因此每执行一次外部查询，子查询都要重新计算一次，这样的子查询就称为<mark>关联子查询</mark>。</p><p>  相关子查询按照一行接一行的顺序执行，主查询的每一行都执行一次子查询。</p><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token comment"># 查询员工中工资大于本部门平均工资的员工的lase_name，salary和其department_id</span>
<span class="token comment">-- 方式一：使用相关子查询</span>
<span class="token keyword">SELECT</span> a<span class="token punctuation">.</span>last_name<span class="token punctuation">,</span> a<span class="token punctuation">.</span>salary<span class="token punctuation">,</span> a<span class="token punctuation">.</span>department_id
<span class="token keyword">FROM</span> employees a
<span class="token keyword">WHERE</span> a<span class="token punctuation">.</span>salary <span class="token operator">&gt;</span> <span class="token punctuation">(</span><span class="token keyword">SELECT</span> <span class="token function">AVG</span><span class="token punctuation">(</span>salary<span class="token punctuation">)</span> <span class="token keyword">FROM</span> employees <span class="token keyword">WHERE</span> department_id <span class="token operator">=</span> a<span class="token punctuation">.</span>department_id<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">-- 方式二：在FROM中作为一个表</span>
<span class="token keyword">SELECT</span> a<span class="token punctuation">.</span>last_name<span class="token punctuation">,</span> a<span class="token punctuation">.</span>salary<span class="token punctuation">,</span> a<span class="token punctuation">.</span>department_id
<span class="token keyword">FROM</span> employees a<span class="token punctuation">,</span>
<span class="token punctuation">(</span><span class="token keyword">SELECT</span> department_id<span class="token punctuation">,</span><span class="token function">AVG</span><span class="token punctuation">(</span>salary<span class="token punctuation">)</span> <span class="token string">&#39;salary&#39;</span>
<span class="token keyword">FROM</span> employees
<span class="token keyword">GROUP</span> <span class="token keyword">BY</span> department_id<span class="token punctuation">)</span> b
<span class="token keyword">WHERE</span> a<span class="token punctuation">.</span>department_id <span class="token operator">=</span> b<span class="token punctuation">.</span>department_id
<span class="token operator">AND</span> a<span class="token punctuation">.</span>salary <span class="token operator">&gt;</span> b<span class="token punctuation">.</span>salary<span class="token punctuation">;</span>
</code></pre></div><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token comment">/*
若employees表中employee_id与job_history表总employee_id相同的数目不小于2，
输出这些相同id的员工的employee_id,last_name和其job_id
*/</span>
<span class="token keyword">SELECT</span> employee_id<span class="token punctuation">,</span> last_name<span class="token punctuation">,</span> job_id
<span class="token keyword">FROM</span> employees e
<span class="token keyword">WHERE</span> <span class="token number">2</span><span class="token operator">&lt;=</span> <span class="token punctuation">(</span><span class="token keyword">SELECT</span> <span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">FROM</span> job_history <span class="token keyword">WHERE</span> employee_id <span class="token operator">=</span> e<span class="token punctuation">.</span>employee_id<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p><strong>在 ORDER BY 中使用子查询</strong>：</p><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token comment"># 查询员工的id,salary,并按照department_name排序</span>
<span class="token keyword">SELECT</span> employee_id<span class="token punctuation">,</span> salary
<span class="token keyword">FROM</span> employees e
<span class="token keyword">ORDER</span> <span class="token keyword">BY</span> <span class="token punctuation">(</span><span class="token keyword">SELECT</span> department_name <span class="token keyword">FROM</span> departments d <span class="token keyword">WHERE</span> e<span class="token punctuation">.</span>department_id <span class="token operator">=</span> d<span class="token punctuation">.</span>department_id<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h3 id="exists-not-exists" tabindex="-1"><a class="header-anchor" href="#exists-not-exists" aria-hidden="true">#</a> EXISTS / NOT EXISTS</h3><p><strong>基本语法</strong>:</p><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> 字段 <span class="token keyword">FROM</span> <span class="token keyword">table</span> <span class="token keyword">WHERE</span> <span class="token punctuation">[</span><span class="token operator">NOT</span><span class="token punctuation">]</span> <span class="token keyword">EXISTS</span> <span class="token punctuation">(</span>subQuery<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p><strong>使用</strong>：</p><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token comment"># 查询公司管理者的employee_id,last_name,job_id,department_id</span>
<span class="token comment">-- 方法一：EXISTS</span>
<span class="token keyword">SELECT</span> employee_id<span class="token punctuation">,</span> last_name<span class="token punctuation">,</span> job_id<span class="token punctuation">,</span> department_id
<span class="token keyword">FROM</span> employees e
<span class="token keyword">WHERE</span> <span class="token keyword">EXISTS</span> <span class="token punctuation">(</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> employees <span class="token keyword">WHERE</span> manager_id <span class="token operator">=</span> e<span class="token punctuation">.</span>employee_id<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">-- 方法二：自连接</span>
<span class="token keyword">SELECT</span> <span class="token keyword">DISTINCT</span> a<span class="token punctuation">.</span>employee_id<span class="token punctuation">,</span> a<span class="token punctuation">.</span>last_name<span class="token punctuation">,</span> a<span class="token punctuation">.</span>job_id<span class="token punctuation">,</span> a<span class="token punctuation">.</span>department_id
<span class="token keyword">FROM</span> employees a<span class="token punctuation">,</span> employees b
<span class="token keyword">WHERE</span> a<span class="token punctuation">.</span>employee_id <span class="token operator">=</span> b<span class="token punctuation">.</span>manager_id<span class="token punctuation">;</span>

<span class="token comment">-- 方法三：多行子查询</span>
<span class="token keyword">SELECT</span> employee_id<span class="token punctuation">,</span> last_name<span class="token punctuation">,</span> job_id<span class="token punctuation">,</span> department_id
<span class="token keyword">FROM</span> employees
<span class="token keyword">WHERE</span> employee_id <span class="token operator">IN</span> <span class="token punctuation">(</span><span class="token keyword">SELECT</span> manager_id <span class="token keyword">FROM</span> employees<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment"># 查询departmens表中，不存在于employees表中的部门的departmen_id和departmen_name</span>
<span class="token keyword">SELECT</span> department_id<span class="token punctuation">,</span> department_name
<span class="token keyword">FROM</span> departments d
<span class="token keyword">WHERE</span> <span class="token operator">NOT</span> <span class="token keyword">EXISTS</span> <span class="token punctuation">(</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> employees <span class="token keyword">WHERE</span> department_id <span class="token operator">=</span> d<span class="token punctuation">.</span>department_id<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h3 id="相关更新" tabindex="-1"><a class="header-anchor" href="#相关更新" aria-hidden="true">#</a> 相关更新</h3><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">UPDATE</span> table1 alias1
<span class="token keyword">SET</span> <span class="token keyword">column</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">SELECT</span> expression <span class="token keyword">FROM</span> table2 alias2 <span class="token keyword">WHERE</span> alias1<span class="token punctuation">.</span><span class="token keyword">column</span> <span class="token operator">=</span> alias2<span class="token punctuation">.</span><span class="token keyword">column</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h3 id="相关删除" tabindex="-1"><a class="header-anchor" href="#相关删除" aria-hidden="true">#</a> 相关删除</h3><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">DELETE</span> <span class="token keyword">FROM</span> table1 alias1
<span class="token keyword">WHERE</span> <span class="token keyword">column</span> operator <span class="token punctuation">(</span><span class="token keyword">SELECT</span> expression <span class="token keyword">FROM</span> table2 alias2 <span class="token keyword">WHERE</span> alias1<span class="token punctuation">.</span><span class="token keyword">column</span> <span class="token operator">=</span> alias2<span class="token punctuation">.</span><span class="token keyword">column</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h2 id="思考题" tabindex="-1"><a class="header-anchor" href="#思考题" aria-hidden="true">#</a> 思考题</h2><p>谁的工资比 Abel 的高?</p><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token comment"># 子查询</span>
<span class="token keyword">SELECT</span> <span class="token operator">*</span>
<span class="token keyword">FROM</span> employees
<span class="token keyword">WHERE</span> salary <span class="token operator">&gt;</span> <span class="token punctuation">(</span><span class="token keyword">SELECT</span> salary <span class="token keyword">FROM</span> employees <span class="token keyword">WHERE</span> last_name <span class="token operator">=</span> <span class="token string">&#39;Abel&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment"># 自连接(快)</span>
<span class="token keyword">SELECT</span> b<span class="token punctuation">.</span><span class="token operator">*</span>
<span class="token keyword">FROM</span> employees a<span class="token punctuation">,</span> employees b
<span class="token keyword">WHERE</span> a<span class="token punctuation">.</span>salary <span class="token operator">&lt;</span> b<span class="token punctuation">.</span>salary
<span class="token operator">AND</span> a<span class="token punctuation">.</span>last_name <span class="token operator">=</span> <span class="token string">&#39;Abel&#39;</span><span class="token punctuation">;</span>
</code></pre></div><h2 id="练习题" tabindex="-1"><a class="header-anchor" href="#练习题" aria-hidden="true">#</a> 练习题</h2><details class="hint-container details"><summary>查询和 Zlotkey 相同部门的员工姓名和工资</summary><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> last_name<span class="token punctuation">,</span> salary
<span class="token keyword">FROM</span> employees
<span class="token keyword">WHERE</span> department_id <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">SELECT</span> department_id <span class="token keyword">FROM</span> employees <span class="token keyword">WHERE</span> last_name <span class="token operator">=</span> <span class="token string">&#39;Zlotkey&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">SELECT</span> b<span class="token punctuation">.</span>last_name<span class="token punctuation">,</span> b<span class="token punctuation">.</span>salary
<span class="token keyword">FROM</span> employees a<span class="token punctuation">,</span> employees b
<span class="token keyword">WHERE</span> a<span class="token punctuation">.</span>department_id <span class="token operator">=</span> b<span class="token punctuation">.</span>department_id
<span class="token operator">AND</span> a<span class="token punctuation">.</span>last_name <span class="token operator">=</span> <span class="token string">&#39;Zlotkey&#39;</span><span class="token punctuation">;</span>
</code></pre></div></details><details class="hint-container details"><summary>查询工资比公司平均工资高的员工的员工号，姓名和工资</summary><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> employee_id<span class="token punctuation">,</span> last_name<span class="token punctuation">,</span> salary
<span class="token keyword">FROM</span> employees
<span class="token keyword">WHERE</span> salary <span class="token operator">&gt;</span> <span class="token punctuation">(</span><span class="token keyword">SELECT</span> <span class="token function">AVG</span><span class="token punctuation">(</span>salary<span class="token punctuation">)</span> <span class="token keyword">FROM</span> employees<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div></details><details class="hint-container details"><summary>选择工资大于所有 job_id=&#39;SA_MAN&#39;的员工的工资的员工的 last_name,job_id,salary</summary><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> last_name<span class="token punctuation">,</span> job_id<span class="token punctuation">,</span> salary
<span class="token keyword">FROM</span> employees
<span class="token keyword">WHERE</span> salary <span class="token operator">&gt;</span><span class="token keyword">ALL</span> <span class="token punctuation">(</span><span class="token keyword">SELECT</span> salary <span class="token keyword">FROM</span> employees <span class="token keyword">WHERE</span> job_id <span class="token operator">=</span> <span class="token string">&#39;SA_MAN&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">SELECT</span> last_name<span class="token punctuation">,</span> job_id<span class="token punctuation">,</span> salary
<span class="token keyword">FROM</span> employees
<span class="token keyword">WHERE</span> salary <span class="token operator">&gt;</span> <span class="token punctuation">(</span><span class="token keyword">SELECT</span> <span class="token function">MAX</span><span class="token punctuation">(</span>salary<span class="token punctuation">)</span> <span class="token keyword">FROM</span> employees <span class="token keyword">WHERE</span> job_id <span class="token operator">=</span> <span class="token string">&#39;SA_MAN&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div></details><details class="hint-container details"><summary>查询各部门中工资比本部门平均工资高的员工的员工号, 姓名和工资</summary><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> employee_id<span class="token punctuation">,</span> last_name<span class="token punctuation">,</span> salary
<span class="token keyword">FROM</span> employees e
<span class="token keyword">WHERE</span> salary <span class="token operator">&gt;</span> <span class="token punctuation">(</span><span class="token keyword">SELECT</span> <span class="token function">AVG</span><span class="token punctuation">(</span>salary<span class="token punctuation">)</span> <span class="token keyword">FROM</span> employees <span class="token keyword">WHERE</span> department_id <span class="token operator">=</span> e<span class="token punctuation">.</span>department_id<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div></details><details class="hint-container details"><summary>查询和姓名中包含字母 u 的员工在相同部门的员工的员工号和姓名</summary><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> employee_id<span class="token punctuation">,</span> last_name
<span class="token keyword">FROM</span> employees
<span class="token keyword">WHERE</span> department_id <span class="token operator">IN</span> <span class="token punctuation">(</span><span class="token keyword">SELECT</span> department_id <span class="token keyword">FROM</span> employees <span class="token keyword">WHERE</span> last_name <span class="token operator">LIKE</span> <span class="token string">&#39;%u%&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">SELECT</span> <span class="token keyword">DISTINCT</span> b<span class="token punctuation">.</span>employee_id<span class="token punctuation">,</span> b<span class="token punctuation">.</span>last_name
<span class="token keyword">FROM</span> employees a<span class="token punctuation">,</span> employees b
<span class="token keyword">WHERE</span> a<span class="token punctuation">.</span>last_name <span class="token operator">LIKE</span> <span class="token string">&#39;%u%&#39;</span>
<span class="token operator">AND</span> a<span class="token punctuation">.</span>department_id <span class="token operator">=</span> b<span class="token punctuation">.</span>department_id<span class="token punctuation">;</span>
</code></pre></div></details><details class="hint-container details"><summary>查询在部门的 location_id 为 1700 的部门工作的员工的员工号</summary><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> employee_id
<span class="token keyword">FROM</span> employees
<span class="token keyword">WHERE</span> department_id <span class="token operator">IN</span> <span class="token punctuation">(</span><span class="token keyword">SELECT</span> department_id <span class="token keyword">FROM</span> departments <span class="token keyword">WHERE</span> location_id <span class="token operator">=</span> <span class="token string">&#39;1700&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">SELECT</span> e<span class="token punctuation">.</span>employee_id
<span class="token keyword">FROM</span> employees e<span class="token punctuation">,</span> departments d
<span class="token keyword">WHERE</span> e<span class="token punctuation">.</span>department_id <span class="token operator">=</span> d<span class="token punctuation">.</span>department_id
<span class="token operator">AND</span> location_id <span class="token operator">=</span> <span class="token string">&#39;1700&#39;</span><span class="token punctuation">;</span>
</code></pre></div></details><details class="hint-container details"><summary>查询管理者是 King 的员工姓名和工资</summary><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> last_name<span class="token punctuation">,</span> salary
<span class="token keyword">FROM</span> employees
<span class="token keyword">WHERE</span> manager_id <span class="token operator">IN</span> <span class="token punctuation">(</span><span class="token keyword">SELECT</span> employee_id <span class="token keyword">FROM</span> employees <span class="token keyword">WHERE</span> last_name <span class="token operator">=</span> <span class="token string">&#39;King&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">SELECT</span> a<span class="token punctuation">.</span>last_name<span class="token punctuation">,</span> a<span class="token punctuation">.</span>salary
<span class="token keyword">FROM</span> employees a<span class="token punctuation">,</span> employees b
<span class="token keyword">WHERE</span> a<span class="token punctuation">.</span>manager_id <span class="token operator">=</span> b<span class="token punctuation">.</span>employee_id
<span class="token operator">AND</span> b<span class="token punctuation">.</span>last_name <span class="token operator">=</span> <span class="token string">&#39;King&#39;</span><span class="token punctuation">;</span>
</code></pre></div></details><details class="hint-container details"><summary>查询工资最高的员工的姓名，要求 first_name 和 last_name 显示为一列，列名为 姓名</summary><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> CONCAT<span class="token punctuation">(</span>first_name<span class="token punctuation">,</span><span class="token string">&#39; &#39;</span><span class="token punctuation">,</span>last_name<span class="token punctuation">)</span> <span class="token string">&#39;姓名&#39;</span>
<span class="token keyword">FROM</span> employees
<span class="token keyword">ORDER</span> <span class="token keyword">BY</span> salary <span class="token keyword">DESC</span> <span class="token keyword">LIMIT</span> <span class="token number">1</span><span class="token punctuation">;</span>

<span class="token keyword">SELECT</span> CONCAT<span class="token punctuation">(</span>first_name<span class="token punctuation">,</span><span class="token string">&#39; &#39;</span><span class="token punctuation">,</span>last_name<span class="token punctuation">)</span> <span class="token string">&#39;姓名&#39;</span>
<span class="token keyword">FROM</span> employees
<span class="token keyword">WHERE</span> salary <span class="token operator">&gt;=</span> <span class="token punctuation">(</span><span class="token keyword">SELECT</span> <span class="token function">MAX</span><span class="token punctuation">(</span>salary<span class="token punctuation">)</span> <span class="token keyword">FROM</span> employees<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div></details>`,61),o=[t];function l(c,k){return a(),n("div",null,o)}const d=s(e,[["render",l],["__file","subquery.html.vue"]]);export{d as default};
