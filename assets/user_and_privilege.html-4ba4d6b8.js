import{_ as a,N as s,Z as e,$ as n}from"./framework-e78e4780.js";const r={},t=n(`<h2 id="_1-用户管理" tabindex="-1"><a class="header-anchor" href="#_1-用户管理" aria-hidden="true">#</a> 1.用户管理</h2><h3 id="_1-1-登录-mysql-服务器" tabindex="-1"><a class="header-anchor" href="#_1-1-登录-mysql-服务器" aria-hidden="true">#</a> 1.1 登录 MySQL 服务器</h3><p>启动 MySQL 服务器后，可以通过 mysql 命令来登录 MySQL 服务器，命令如下：</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code>mysql <span class="token parameter variable">-h</span> <span class="token function">hostname</span><span class="token operator">|</span>hostIP <span class="token parameter variable">-P</span> port <span class="token parameter variable">-u</span> username <span class="token parameter variable">-p</span> databasename <span class="token parameter variable">-e</span> <span class="token string">&#39;query_sql&#39;</span>

<span class="token comment"># 例如</span>
mysql <span class="token parameter variable">-hlocalhost</span> <span class="token parameter variable">-P3306</span> <span class="token parameter variable">-uroot</span> <span class="token parameter variable">-p</span> mysql <span class="token parameter variable">-e</span> <span class="token string">&#39;select host,user from user&#39;</span>
</code></pre></div><p>命令中参数说明：<br>  <code>-h hostname|hostIP</code>：连接主机，hostname 为主机，hostIP 为主机 IP<br>  <code>-P port</code>：端口，默认 3306，不使用该参数则自动连接 3306<br>  <code>-u username</code>：登录的用户名<br>  <code>-p password</code>：登录的密码，省略 password 会提示输入密码<br>  <code>databasename</code>：指明连接哪一个数据库<br>  <code>-e &#39;query_sql&#39;</code>：登录 MySQL 服务器后可执行该语句，然后退出 MySQL 服务器</p><h3 id="_1-2-创建用户" tabindex="-1"><a class="header-anchor" href="#_1-2-创建用户" aria-hidden="true">#</a> 1.2 创建用户</h3><p>CREATE USER 语句的基本语法形式如下：</p><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">CREATE</span> <span class="token keyword">USER</span> 用户名 <span class="token punctuation">[</span>IDENTIFIED <span class="token keyword">BY</span> <span class="token string">&#39;密码&#39;</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">,</span> 用户名 <span class="token punctuation">[</span>IDENTIFIED <span class="token keyword">BY</span> <span class="token string">&#39;密码&#39;</span><span class="token punctuation">]</span><span class="token punctuation">]</span>

<span class="token comment"># 例如</span>
<span class="token keyword">CREATE</span> <span class="token keyword">USER</span> lihua IDENTIFIED <span class="token keyword">BY</span> <span class="token string">&#39;123123&#39;</span><span class="token punctuation">;</span> <span class="token comment"># 默认host是 %</span>
<span class="token keyword">CREATE</span> <span class="token keyword">USER</span> <span class="token string">&#39;lihua&#39;</span><span class="token variable">@&#39;localhost&#39;</span> IDENTIFIED <span class="token keyword">BY</span> <span class="token string">&#39;123456&#39;</span><span class="token punctuation">;</span>
</code></pre></div><p>说明：<br>  ① 用户名参数表示新建用户的账户，由<code>用户(User)</code>和<code>主机名(Host)</code>构成；<br>  ② <code>[]</code>表示可选，可以指定用户登录时不需要密码验证，不过此方式不安全，不推荐使用。如果指定密码，需要指定明文密码；<br>  ③ <code>CREATE USER</code>语句可以同时创建多个用户。</p><h3 id="_1-3-修改用户" tabindex="-1"><a class="header-anchor" href="#_1-3-修改用户" aria-hidden="true">#</a> 1.3 修改用户</h3><p>修改用户名：</p><div class="language-sql" data-ext="sql"><pre class="language-sql"><code>
</code></pre></div><h3 id="_1-4-删除用户" tabindex="-1"><a class="header-anchor" href="#_1-4-删除用户" aria-hidden="true">#</a> 1.4 删除用户</h3><h3 id="_1-5-设置当前用户密码" tabindex="-1"><a class="header-anchor" href="#_1-5-设置当前用户密码" aria-hidden="true">#</a> 1.5 设置当前用户密码</h3><h3 id="_1-6-修改其它用户密码" tabindex="-1"><a class="header-anchor" href="#_1-6-修改其它用户密码" aria-hidden="true">#</a> 1.6 修改其它用户密码</h3><h3 id="_1-7-mysql8-密码管理-了解" tabindex="-1"><a class="header-anchor" href="#_1-7-mysql8-密码管理-了解" aria-hidden="true">#</a> 1.7 MySQL8 密码管理(了解)</h3><h2 id="_2-权限管理" tabindex="-1"><a class="header-anchor" href="#_2-权限管理" aria-hidden="true">#</a> 2.权限管理</h2><h2 id="_3-权限表" tabindex="-1"><a class="header-anchor" href="#_3-权限表" aria-hidden="true">#</a> 3.权限表</h2><h2 id="_4-访问控制-了解" tabindex="-1"><a class="header-anchor" href="#_4-访问控制-了解" aria-hidden="true">#</a> 4.访问控制(了解)</h2><h2 id="_5-角色管理" tabindex="-1"><a class="header-anchor" href="#_5-角色管理" aria-hidden="true">#</a> 5.角色管理</h2>`,20),o=[t];function p(c,d){return s(),e("div",null,o)}const i=a(r,[["render",p],["__file","user_and_privilege.html.vue"]]);export{i as default};
